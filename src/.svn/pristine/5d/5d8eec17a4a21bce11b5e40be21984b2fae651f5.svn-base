<?xml version="1.0" encoding="utf-8"?>
<Application x:Class="SDN.SimpleAccounting.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />

                 <!--Accent and AppTheme setting--> 
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="Resources/Images/ImageSource.xaml" />
                <ResourceDictionary Source="Resources/Styles.xaml"  />
             
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="AccentSelectedFColorBrush" Color="White" />
            <SolidColorBrush x:Key="AccentSelectedBColorBrush" Color="Black" />
            <SolidColorBrush x:Key="AccentSelectedGColorBrush" Color="Gray" />
             
            <Style TargetType="ComboBoxItem" x:Key="MetroComboBoxItem">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <!--<Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />-->
                <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="MouseOverRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                              Value=".65" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                   Storyboard.TargetName="contentPresenter">
                                                    <SplineDoubleKeyFrame KeyTime="0"
                                                              Value=".55" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="SelectedRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                              Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard />
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="SelectedRectangle"
                               IsHitTestVisible="False"
                               Opacity="0"
                               Fill="{DynamicResource AccentColorBrush}" />
                                <Rectangle x:Name="MouseOverRectangle"
                               IsHitTestVisible="False"
                               Opacity="0"
                               Fill="{DynamicResource AccentColorBrush3}" />
                                <ContentControl Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </ContentControl>
                                <Rectangle x:Name="FocusVisualElement"
                               Stroke="{DynamicResource HighlightBrush}"
                               StrokeThickness="1"
                               Visibility="Collapsed" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AccentSelectedFColorBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource AccentSelectedBColorBrush}" />
                                </Trigger>
                                <!-- This Trigger is new -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AccentSelectedFColorBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource AccentSelectedGColorBrush}" />
                                </Trigger>                               
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource AccentSelectedFColorBrush}" />
                                    <Setter Property="Background" Value="{DynamicResource AccentSelectedGColorBrush}" />
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
