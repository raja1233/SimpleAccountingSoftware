
namespace SDN.Purchasing.ViewModel
{
    using Common;
    using Microsoft.Practices.ServiceLocation;
    using SDN.Purchasing.View;
    using UI.Entities;
    using Microsoft.Practices.Prism.Commands;
    using Microsoft.Practices.Prism.Events;
    using Microsoft.Practices.Prism.Regions;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;
    using SASClient.CloseRequest;
    using System.Windows;

    public class PurchaseTabViewModel : PurchaseTabEntity
    {
        #region "Private members"

        public PurchaseTabViewModel(IRegionManager regionManager)
        {
            this.regionManager = regionManager;

        }
        public PurchaseTabViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)
        {
            this.regionManager = regionManager;
            this.eventAggregator = eventAggregator;
            this.setdefaultTab();
        }
        private readonly IRegionManager regionManager;

        /// <summary>
        /// The event aggregator
        /// </summary>
        private readonly IEventAggregator eventAggregator;

        /// <summary>
        /// The Companydetails click command
        /// </summary>
        private readonly DelegateCommand purchaseQuotationClickCommand = null;
        private readonly DelegateCommand purchaseOrderClickCommand = null;
        private readonly DelegateCommand purchaseInvoiceClickCommand = null;
        private readonly DelegateCommand debitNoteClickCommand = null;
        private readonly DelegateCommand paymentToSupplierClickCommand = null;
        StackList listitem = new StackList();

        #endregion

        #region "Public properties"

        /// <summary>
        /// Gets the Company details click command.
        /// </summary>
        /// <value>
        /// The Companydetails click command.
        /// </value>
        public DelegateCommand PurchaseQuotationClickCommand
        {
            get
            {
                return (this.purchaseQuotationClickCommand ?? new DelegateCommand(this.ShowPurchaseQuotationView));
            }
        }
        public DelegateCommand PurchaseOrderClickCommand
        {
            get
            {
                return (this.purchaseOrderClickCommand ?? new DelegateCommand(this.ShowPurchaseOrderView));
            }
        }
        public DelegateCommand PurchaseInvoiceClickCommand
        {
            get
            {
                return (this.purchaseInvoiceClickCommand ?? new DelegateCommand(this.ShowPurchaseInvoiceView));
            }
        }

        public DelegateCommand DebitNoteClickCommand
        {
            get
            {
                return (this.debitNoteClickCommand ?? new DelegateCommand(this.ShowDebitNoteView));
            }
        }

        public DelegateCommand PaymentToSupplierClickCommand
        {
            get
            {
                return (this.paymentToSupplierClickCommand ?? new DelegateCommand(this.ShowPaymentsToSuppliersView));
            }
        }

        #endregion

        #region "Private Methods"

        public void ShowPurchaseQuotationView()
        {
            SharedValues.ScreenCheckName = "Purchase Quotation";
            SharedValues.ViewName = "Purchase Quotation List";
            var accessitem = listitem.AddToList();
            if (accessitem == true)
            {
                SharedValues.getValue = "PurchaseQuotationTab";
            var view = ServiceLocator.Current.GetInstance<PurchaseQuotationListView>();

            //var region = this.regionManager.Regions[RegionNames.MainRegion];
            //region.Add(view);
            //if (region != null)
            //{
            //    region.Activate(view);
            //}
            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Quotations List");
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
            }
            else
            {
                MessageBox.Show("You do not have access to this screen. Please contact your Administrator.");
            }
        }
        public void ShowPurchaseOrderView()
        {
            SharedValues.ScreenCheckName = "Purchase Order";
            SharedValues.ViewName = "Purchase Order List";
            var accessitem = listitem.AddToList();
            if (accessitem == true)
            {
                SharedValues.getValue = "PurchaseOrderTab";
            var view = ServiceLocator.Current.GetInstance<PurchaseOrderListView>();

            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Orders List");
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
            }
            else
            {
                MessageBox.Show("You do not have access to this screen. Please contact your Administrator.");
            }
        }

        public void ShowPurchaseInvoiceView()
        {
            SharedValues.ScreenCheckName = "Purchases Invoice(Products and Services)";
            SharedValues.ViewName = "Purchases Invoice(Products and Services) List";
            var accessitem = listitem.AddToList();
            if (accessitem == true)
            {
                SharedValues.getValue = "PurchaseInvoiceTab";
            var view = ServiceLocator.Current.GetInstance<PurchaseInvoiceListView>();

            //var region = this.regionManager.Regions[RegionNames.MainRegion];
            //region.Add(view);
            //if (region != null)
            //{
            //    region.Activate(view);
            //}
            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Invoices List");
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
            }
            else
            {
                MessageBox.Show("You do not have access to this screen. Please contact your Administrator.");
            }
        }
        public void ShowDebitNoteView()
        {
            SharedValues.ScreenCheckName = "Debit Note";
            SharedValues.ViewName = "Debit Note List";
            var accessitem = listitem.AddToList();
            if (accessitem == true)
            {
                SharedValues.getValue = "DebitNoteTab";
            var view = ServiceLocator.Current.GetInstance<DebitNoteListView>();

            //var region = this.regionManager.Regions[RegionNames.MainRegion];
            //region.Add(view);
            //if (region != null)
            //{
            //    region.Activate(view);
            //}
            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Debit Notes List");
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
            }
            else
            {
                MessageBox.Show("You do not have access to this screen. Please contact your Administrator.");
            }
        }

        public void ShowPaymentsToSuppliersView()
        {
            SharedValues.ScreenCheckName = "Payment to Suplier";
            SharedValues.ViewName = "Payments To Suppliers List";
            var accessitem = listitem.AddToList();
            if (accessitem == true)
            {
                SharedValues.getValue = "PaymentToSupplierTab";
            var view = ServiceLocator.Current.GetInstance<PaymentsToSuppliersListView>();

            //var region = this.regionManager.Regions[RegionNames.MainRegion];
            //region.Add(view);
            //if (region != null)
            //{
            //    region.Activate(view);
            //}
            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Payments To Suppliers List");
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
            }
            else
            {
                MessageBox.Show("You do not have access to this screen. Please contact your Administrator.");
            }
        }

        #endregion
        private void setdefaultTab()
        {
            if (SharedValues.getValue == "PurchaseQuotationTab")
            {
                this.QuotationTabTrue = true;
            }
            else if (SharedValues.getValue == "PurchaseOrderTab")
            {
                this.OrderTabTrue = true;
            }
            else if (SharedValues.getValue == "PurchaseInvoiceTab")
            {
                this.InvoiceTabTrue = true;
            }
            else if (SharedValues.getValue == "DebitNoteTab")
            {
                this.DebitTabTrue = true;
            }
            else if(SharedValues.getValue== "PaymentToSupplierTab")
            {
                this.PaymentTabTrue = true;
            }
            else
            {
                this.QuotationTabTrue = true;
            }
        }
    }
}
