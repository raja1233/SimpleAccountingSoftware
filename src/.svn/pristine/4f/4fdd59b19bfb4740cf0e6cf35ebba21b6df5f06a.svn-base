using Microsoft.Practices.Prism.Commands;
using Microsoft.Practices.Prism.Events;
using Microsoft.Practices.Prism.Regions;
using SDN.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SASClient.Accounts.ViewModel
{
    public  class AccountsDetailsTabViewModel : AccountsDetailsTabEntity
    {
        #region "private property"
        private readonly IRegionManager regionManager;
        private readonly IEventAggregator eventAggregator;
        #endregion
        #region "public property"
        #endregion
        #region "Constructor"

        public AccountsDetailsTabViewModel(IRegionManager regionManager)
        {
            this.regionManager = regionManager;
        }
        public  AccountsDetailsTabViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)
        {
            this.regionManager = regionManager;
            this.eventAggregator = eventAggregator;
            this.setdefaultTab();

        }
        #endregion
        #region "click command"
        private readonly DelegateCommand unpaidSalesInvoiceClickCommand = null;
        private readonly DelegateCommand unpaidPurchaseInvoiceClickCommand = null;
        private readonly DelegateCommand undeliveredSalesOrdersWithDepositsClickCommand = null;
        private readonly DelegateCommand undeliveredPurchaseOrdersWithDepositsClickCommand = null;
        private readonly DelegateCommand stockClickCommand = null;
        #endregion
        #region "click command definition"
        public DelegateCommand UnpaidSalesInvoiceClickCommand
        {
            get
            {
                return (this.unpaidSalesInvoiceClickCommand ?? new DelegateCommand(this.UnpaidSalesInvoiceView));
            }
        }
        public DelegateCommand UnpaidPurchaseInvoiceClickCommand
        {
            get
            {
                return (this.unpaidPurchaseInvoiceClickCommand ?? new DelegateCommand(this.UnpaidPurchaseInvoiceView));
            }
        }
        public DelegateCommand UndeliveredSalesOrdersWithDepositsClickCommand
        {
            get
            {
                return (this.undeliveredSalesOrdersWithDepositsClickCommand ?? new DelegateCommand(this.UndeliveredSalesOrdersWithDepositsView));
            }
        }
        public DelegateCommand UndeliveredPurchaseOrdersWithDepositsClickCommand
        {
            get
            {
                return (this.undeliveredPurchaseOrdersWithDepositsClickCommand ?? new DelegateCommand(this.UndeliveredPurchaseOrdersWithDepositsView));
            }
        }
        public DelegateCommand StockClickCommand
        {
            get
            {
                return (this.stockClickCommand ?? new DelegateCommand(this.StockView));
            }
        }
        #endregion
        #region "view definition"
        public void  UnpaidSalesInvoiceView()
        {

        }
        public void UnpaidPurchaseInvoiceView()
        {

        }
        public void UndeliveredSalesOrdersWithDepositsView()
        {

        }
        public void UndeliveredPurchaseOrdersWithDepositsView()
        {

        }
        public void StockView()
        {

        }
        #endregion
        #region "public method"
        private void setdefaultTab()
        {

            if (SharedValues.getValue == "UnpaidSalesInvoiceTab")
            {
                this.UnpaidSalesInvoiceTabTrue = true;
            }
            if (SharedValues.getValue == "UnpaidPurchaseInvoiceTab")
            {
                this.UnpaidPurchaseInvoiceTabTrue = true;
            }
            if (SharedValues.getValue == "UndeliveredSalesOrdersWithDepositsTab")
            {
                this.UndeliveredSalesOrdersWithDepositsTabTrue = true;
            }
            if (SharedValues.getValue == "UndeliveredPurchaseOrdersWithDepositsTab")
            {
                this.UndeliveredPurchaseOrdersWithDepositsTabTrue = true;
            }
            if (SharedValues.getValue == "StockTab")
            {
                this.StockTabTrue = true;
            }
            
        }
        #endregion
    }
}
