using Microsoft.Practices.Prism.Commands;
using Microsoft.Practices.Prism.Events;
using Microsoft.Practices.Prism.Regions;
using Microsoft.Practices.ServiceLocation;
using SASClient.CloseRequest;
using SASClient.Customers.Views;
using SDN.Common;
using SDN.UI.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SASClient.Customers.ViewModel
{
   public  class DetailsListSubTabViewModel: CustomerTabEntity
    {

        #region "Private members"

        StackList itemlist = new StackList();
        private readonly IRegionManager regionManager;

        /// <summary>
        /// The event aggregator
        /// </summary>
        private readonly IEventAggregator eventAggregator;

        public DetailsListSubTabViewModel(IRegionManager regionManager)
        {
            this.regionManager = regionManager;

        }
        public DetailsListSubTabViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)
        {
            this.regionManager = regionManager;
            this.eventAggregator = eventAggregator;
            // this.setdefaultTab();
            //inInitializer();
        }

        /// <summary>
        /// The Companydetails click command
        /// </summary>
        private readonly DelegateCommand list1ClickCommand = null;
        private readonly DelegateCommand list2ClickCommand = null;
        private readonly DelegateCommand list3ClickCommand = null;
        private readonly DelegateCommand list4ClickCommand = null;
      
        #endregion

        #region "Public properties"

        /// <summary>
        /// Gets the Company details click command.
        /// </summary>
        /// <value>
        /// The Companydetails click command.
        /// </value>

        public DelegateCommand List1ClickCommand
        {
            get
            {
                return (this.list1ClickCommand ?? new DelegateCommand(this.ShowList1View));
            }
        }
        public DelegateCommand List2ClickCommand
        {
            get
            {
                return (this.list2ClickCommand ?? new DelegateCommand(this.ShowList2View));
            }
        }
        public DelegateCommand List3ClickCommand
        {
            get
            {
                return (this.list3ClickCommand ?? new DelegateCommand(this.ShowList3View));
            }
        }
        public DelegateCommand List4ClickCommand
        {
            get
            {
                return (this.list4ClickCommand ?? new DelegateCommand(this.ShowList4View));
            }
        }
      


        #endregion

        #region "Private Methods"

        private void ShowList1View()
        {
            SharedValues.ViewName = "CustomersDetailsList1View";
            //SharedValues.getValue = "CustomerStatementTab";
            var view = ServiceLocator.Current.GetInstance<CustomersDetailsList1View>();


            var region = this.regionManager.Regions[RegionNames.MainRegion];

            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Customers Details List");
            itemlist.AddToList();
        }
        private void ShowList2View()
        {
            SharedValues.ViewName = "CustomersDetailsList2View";
            //SharedValues.getValue = "PaymentDueDaysTab";
            var view = ServiceLocator.Current.GetInstance<CustomersDetailsList2View>();


            var region = this.regionManager.Regions[RegionNames.MainRegion];

            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Customers Details List");
            itemlist.AddToList();
        }

        private void ShowList3View()
        {
            SharedValues.ViewName = "CustomersDetailsList3View";
            //SharedValues.getValue = "PaymentDueDaysTab";
            var view = ServiceLocator.Current.GetInstance<CustomersDetailsList3View>();


            var region = this.regionManager.Regions[RegionNames.MainRegion];

            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Customers Details List");
            itemlist.AddToList();
        }

        private void ShowList4View()
        {
            SharedValues.ViewName = "CustomersDetailsList4View";
            var view = ServiceLocator.Current.GetInstance<CustomersDetailsList4View>();


            var region = this.regionManager.Regions[RegionNames.MainRegion];

            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Customers Details List");
            itemlist.AddToList();
        }

   

        #endregion
       
    }
}
