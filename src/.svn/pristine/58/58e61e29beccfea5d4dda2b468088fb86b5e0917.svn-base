<UserControl x:Class="SASClient.CashBank.Views.PayMoneyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             xmlns:local="clr-namespace:SASClient.CashBank.Views"
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:helpers="clr-namespace:SDN.Common.Converter;assembly=SDN.Common"
             mc:Ignorable="d" Width="1024"
             >
    <UserControl.Resources>
        <helpers:DateTimeConverter x:Key="DateTimeFormatter"></helpers:DateTimeConverter>
        <helpers:RowToIndexConverter x:Key="RowToIndexConverter"/>
        <helpers:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter"/>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <!--Watermark style start here-->
        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="Gray" />
        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Black" />
        <!--Watermark style End here-->
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
        <Grid Margin="10,10,0,10" Width="auto" Height="auto">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
                <Style x:Key="ComboStyle" TargetType="{x:Type ComboBox}">
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="10*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="341"></ColumnDefinition>
                <ColumnDefinition Width="341"></ColumnDefinition>
                <ColumnDefinition Width="330"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Row="0" Grid.Column="0">
                <TextBlock  Name="lblAccountName" Text="Account Name" Width="140"></TextBlock>

            </DockPanel>
            <DockPanel Grid.Row="0" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="0,0,0,0" />
                <ComboBox  Name="cmbAccountName" Margin="2,2,0,0"  ItemsSource="{Binding LinkedAccountsLst}"  
                           Width="230" Height="25"  HorizontalAlignment="Left" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
               BorderBrush="{StaticResource brushWatermarkBorder}" SelectedValue="{Binding SelectedLinkedAcntID}"  SelectedValuePath="AccountID" VerticalAlignment="Top"  >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="AccountName" Text="{Binding AccountName}"></TextBlock>
                            <DataTemplate.Triggers>
                                <DataTrigger 
          Binding="{Binding Path=DataContext.IsLinked, RelativeSource={RelativeSource TemplatedParent}}" 
          Value="True">
                                    <Setter Property="Foreground" TargetName="AccountName" Value="Gray">
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid x:Name="gd" TextElement.Foreground="Black">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Margin="5" Grid.Column="0" Text="{Binding AccountName}"/>
                                            <TextBlock Margin="5" Grid.Column="1" Text="{Binding AccountTypeName}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                                <Setter TargetName="gd"  Property="Background" Value="Gray"></Setter>
                                                <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"></Setter>
                                            </Trigger>
                                            <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                                <Setter TargetName="gd"  Property="Background" Value="Blue"></Setter>
                                                <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"></Setter>
                                            </Trigger>

                                            <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                            <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

            </DockPanel>
            <DockPanel Grid.Row="0" Grid.Column="1"  Margin="2,2,0,0" >
                <TextBlock   Margin="17 5 0 0"   Style="{StaticResource WaterMarkStyle}" 
                    HorizontalAlignment="Left"   Text="Search" Foreground="{StaticResource brushWatermarkForeground}" >
                    <TextBlock.Visibility>
                        <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                            <Binding ElementName="cmbAccountName" Path="Text.IsEmpty" />
                            <Binding ElementName="cmbAccountName" Path="IsFocused" />
                        </MultiBinding>
                    </TextBlock.Visibility>
                </TextBlock>
            </DockPanel>

            <!--<DockPanel Grid.Row="1" Grid.Column="1">
                
            </DockPanel>-->
            <!--<TextBlock Grid.Row="0" Grid.Column="2" Name="lblBlank"   Text="" Grid.RowSpan="3" ></TextBlock>-->
            <!--<DockPanel Grid.Row="1"  Grid.Column="4"  HorizontalAlignment="Left" />-->
            <TextBlock Grid.Column="0" Grid.Row="1"></TextBlock>
            <DockPanel Grid.Row="2" Grid.Column="0">
                <TextBlock  Text="Cash/Bank A/c Name" MaxWidth="140" MinWidth="140" Width="140" ></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="1">
                <ComboBox  Name="cmbAcName" Margin="7,2,0,5"   ItemsSource="{Binding CashAndBankAccountsLst}"  
                           Width="230" Height="25"  HorizontalAlignment="Left" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
             BorderBrush="Black"  SelectedValue="{Binding SelectedCashBankAcntID}"  DisplayMemberPath="AccountName" SelectedValuePath="AccountID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AccountSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </DockPanel>
            <DockPanel Grid.Row="3" Grid.Column="0">
                <TextBlock Text="Cash/Cheque No." Width="140"></TextBlock>
                <!--<RadioButton KeyboardNavigation.AcceptsReturn="True" Command="{Binding CashCheckedCommand}" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="50" IsChecked="{Binding IsChequeFalse,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GroupName="AccntType" >Cash
                </RadioButton>
                <RadioButton Width="85" KeyboardNavigation.AcceptsReturn="True"  Command="{Binding ChequeCheckedCommand}" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding IsChequeTrue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GroupName="AccntType">Cheque No
                </RadioButton>-->

            </DockPanel>
            <DockPanel Grid.Row="3" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,1,0" />
                <TextBox Width="230" Margin="0,0,0,3" HorizontalAlignment="Left" IsReadOnly="{Binding IsTextBoxReadOnly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                         Text="{Binding CashChequeNo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="2" Margin="-90 0 0 0">
                <TextBlock Foreground="Gray" FontStyle="Italic">For Cheque, Credit Card, etc., enter PM- followed by number</TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="4" Grid.Column="0">
                <TextBlock  Name="lblDate" Text="Date" MaxWidth="140" MinWidth="140" Width="140" ></TextBlock>

            </DockPanel>
            <DockPanel Grid.Row="4" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="0,0,1,0" />
                <DatePicker MaxWidth="230" MinWidth="230" HorizontalAlignment="Left"  Margin="1,2,0,3" PreviewKeyUp="OpenDatePicker_KeyDown"  PreviewKeyDown="OpenDatePicker_KeyUp" 
                  IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   SelectedDate="{Binding PayDateCalender, BindingGroupName=Group1, UpdateSourceTrigger=PropertyChanged}" Width="230"   >
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBox x:Name="Delivery_TextBox" IsReadOnly="True"  BorderThickness="0" HorizontalContentAlignment="Stretch" 
                                             VerticalContentAlignment="Stretch"  BorderBrush="{DynamicResource BaseBorderBrush}" >
                                            <TextBox.Text >
                                                <MultiBinding Converter="{StaticResource DateTimeFormatter}">
                                                    <Binding Path="SelectedDate"/>
                                                    <Binding Path="DateFormat"></Binding>
                                                    <Binding Path="DataContext.PayDateCalender"
                                                                RelativeSource="{RelativeSource AncestorType={x:Type DatePicker}}"  />
                                                </MultiBinding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <TextBox Margin="-401 -2 0 0" Height="21" BorderBrush="{StaticResource brushWatermarkBorder}" x:Name="PART_TextBox" IsReadOnly="false"  BorderThickness="0 0 0 0" HorizontalContentAlignment="Stretch" TextChanged="OnTextChanged"
                 VerticalContentAlignment="Stretch" Text="{Binding Path=CashChequeDateStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"  Width="160">

                </TextBox>
            </DockPanel>
            <DockPanel Grid.Row="5" Grid.Column="0">
                <TextBlock Width="140">
                    Total Before Tax
                </TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="5" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,1,0" />
                <TextBox Margin="0,0,0,0" MaxLength="18" Width="230" Text="{Binding TotalBeforeTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </DockPanel>
            <DockPanel Grid.Row="6" Grid.Column="0">
                <TextBlock Text="{Binding TaxName}" Margin="0,5,0,0"/>
                <TextBlock Text="Code and Rate" Margin="5,5,0,0"></TextBlock>
                <ComboBox  Name="cmbTaxCode" Margin="15,3,0,4"   ItemsSource="{Binding LstTaxes}"  
                           Width="100" Height="18"  HorizontalAlignment="Left" 
             BorderBrush="Black"  SelectedValue="{Binding SelectedTaxID}"  DisplayMemberPath="TaxCode" SelectedValuePath="TaxID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBox Width="50" Height="26" Margin="0,0,50,1" Text="{Binding TaxRate}" IsReadOnly="True"></TextBox>
                <!--<ComboBox  Name="cmbTaxRate" Margin="15,2,0,5"   ItemsSource="{Binding AccountDetails}"  
                           Width="70" Height="20"  HorizontalAlignment="Left"
             BorderBrush="Black"  SelectedValue="{Binding SelectedAccountID}"  DisplayMemberPath="AccountName" SelectedValuePath="AccountID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AccountSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>-->

            </DockPanel>
            <DockPanel Grid.Row="6" Grid.Column="1">
                <TextBox MaxLength="18" Margin="7,0,0,0" Width="230" IsReadOnly="True" Text="{Binding TotalTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"></TextBox>
            </DockPanel>
            <DockPanel Grid.Row="7" Grid.Column="0">
                <TextBlock  Text="Total After Tax"/>
                <TextBlock Text="{Binding CurrencyName}" Margin="5,0,0,0"></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="7" Grid.Column="1">
                <TextBox MaxLength="18" Margin="7,0,0,0" Width="230" IsReadOnly="true" Text="{Binding TotalAfterTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"></TextBox>
            </DockPanel>
            <DockPanel Grid.Row="8" Grid.Column="0">
                <TextBlock Width="140">
                    Remarks
                </TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="8" Grid.Column="1">
                <TextBox MaxLength="200" Margin="7,0,0,0" Width="230" Text="{Binding Remarks,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"></TextBox>
            </DockPanel>
            <DockPanel Grid.Column="0" Grid.Row="9" Grid.ColumnSpan="2" >
                <TextBlock Text="Enter payment of Liabilities such as, " FontStyle="Italic" Foreground="Gray"></TextBlock>
                <TextBlock Text="{Binding TaxName}" FontStyle="Italic" Foreground="Gray"></TextBlock>
                <TextBlock Text=" paid To Government, Bank loan installments etc. here" FontStyle="Italic" Foreground="Gray"></TextBlock>
            </DockPanel>
            <DockPanel Grid.Column="0" Grid.Row="10" Grid.ColumnSpan="2" >
                <TextBlock Text="Enter payments To Suppliers " FontStyle="Italic" Foreground="Gray"></TextBlock>
                <TextBlock >
                    <Hyperlink Command="{Binding NavigateToPaymentToSupplier}" CommandParameter="New">
                         <TextBlock Text=" here " FontStyle="Italic" />
                    </Hyperlink>
                </TextBlock>
            </DockPanel>
            <DockPanel Grid.Column="0" Grid.Row="11" Grid.ColumnSpan="5" >
                <TextBlock Text="In Account Name drop-down list you can select Net GST and user created liabilities accounts only. " FontStyle="Italic" Foreground="Gray"></TextBlock>
                <!--<TextBlock >
                    <Hyperlink Command="{Binding NavigateToPaymentToSupplier}" CommandParameter="New">
                         <TextBlock Text=" Cash &amp; Bank > Payment To Supplier" FontStyle="Italic" />
                    </Hyperlink>
                </TextBlock>-->
            </DockPanel>
            <TextBlock Grid.Row="12" Grid.Column="3" VerticalAlignment="Bottom" Grid.ColumnSpan="4" Margin="-200,0,0,0" Foreground="Red" Text="{Binding Path=PSErrors}"></TextBlock>

            <TextBlock Grid.Row="12" Grid.Column="3" VerticalAlignment="Bottom" Grid.ColumnSpan="4" Margin="-200,0,0,0" Foreground="Red" Text="{Binding Path=DateErrors}"></TextBlock>
            <DockPanel Grid.Row="12" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Margin="0 0 10 0">
                <Button x:Name="btnNew" Content="New" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding NewPSCommand}"></Button>
                <Button x:Name="btnSave" Content="Save" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding SaveCommand}"></Button>
                <Button x:Name="btnClose" Content="Close" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding Path=CloseCommand }"></Button>
            </DockPanel>

        </Grid>
    </ScrollViewer>
</UserControl>
