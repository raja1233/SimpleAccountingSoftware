using Microsoft.Reporting.WinForms;
using SASClient.Purchasing.ViewModel;
using SDN.UI.Entities.Suppliers;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace SASClient.Reports.ReportsPage
{
    /// <summary>
    /// Interaction logic for PurchaseInvoiceDebitPaymentReportViewer.xaml
    /// </summary>
    public partial class PurchaseInvoiceDebitPaymentReportViewer : UserControl
    {
        private InvoiceDebitPaymentsViewModel _viewModelSales;
        public PurchaseInvoiceDebitPaymentReportViewer()
        {
            InitializeComponent();
            Type type = typeof(InvoiceDebitPaymentsViewModel);

            //SalesInvoiceViewModel instance = (SalesInvoiceViewModel)Activator.CreateInstance(type);
            object obj = System.Runtime.Serialization.FormatterServices
             .GetUninitializedObject(type);
            _viewModelSales = (InvoiceDebitPaymentsViewModel)obj;

            this.DataContext = obj;
        }
        public PurchaseInvoiceDebitPaymentReportViewer(InvoiceDebitPaymentsViewModel model) : this()
        {
            InitializeComponent();
            this.DataContext = _viewModelSales;
            _viewModelSales = model;

        }
        //public System.Drawing.Image byteArrayToImage(byte[] bytesArr)
        //{
        //    using (var ms = new MemoryStream(bytesArr))
        //    {
        //        return System.Drawing.Image.FromStream(ms);
        //    }
        //}

        private void UserControl_LoadedPurchaseInvoiceDebitPayment(object sender, RoutedEventArgs e)
        {
            //var a = _viewModel.PrintSalesQuotation();
            InvoiceDebitPaymentsEntity sqf = _viewModelSales.PrintPurchaseInvoiceDebitPayment();

            // System.Drawing.Image newImage = byteArrayToImage(sqf.Quotation.CompanyLogo);
            // System.Drawing.Image x = (Bitmap)((new ImageConverter()).ConvertFrom(sqf.Quotation.CompanyLogo));


            //this is for table grid

            DataTable dt = new DataTable();
            dt.Columns.Add(new DataColumn("TransactionNo", typeof(string)));
            dt.Columns.Add(new DataColumn("TransactionDateStr", typeof(string)));
            dt.Columns.Add(new DataColumn("InvoiceAmountStr", typeof(string)));
            dt.Columns.Add(new DataColumn("CNPaymentStr", typeof(string)));
            dt.Columns.Add(new DataColumn("BalanceStr", typeof(string)));
         

            //ReportingDataset ds = new ReportingDataset();


            foreach (var item in sqf.LstInvoiceDetails)
            {
                DataRow dr = dt.NewRow();
                dr["TransactionNo"] = item.TransactionNo;
                dr["TransactionDateStr"] = item.TransactionDateStr;
                dr["InvoiceAmountStr"] = item.InvoiceAmountStr;
                dr["CNPaymentStr"] = item.CNPaymentStr;
                dr["BalanceStr"] = item.BalanceStr;
                dt.Rows.Add(dr);
            }



            ReportDataSource reportDataSource = new ReportDataSource();
            reportDataSource.Name = "SupplierStatementInvCNPaymentDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource.Value = dt;
            // end of product grid code
            //DataTable dt4 = new DataTable();
            ////for other than table
            //dt4.Columns.Add(new DataColumn("TermsAndConditions", typeof(string)));
            //dt4.Columns.Add(new DataColumn("TotalBeforeTax", typeof(string)));
            //dt4.Columns.Add(new DataColumn("TotalTax", typeof(string)));
            //dt4.Columns.Add(new DataColumn("TotalAfterTax", typeof(string)));
            //dt4.Columns.Add(new DataColumn("PONo", typeof(string)));
            //dt4.Columns.Add(new DataColumn("PODate", typeof(string)));
            //dt4.Columns.Add(new DataColumn("DeliveryDate", typeof(string)));
            //dt4.Columns.Add(new DataColumn("PINo", typeof(string)));


            //DataRow dr4 = dt4.NewRow();
            //dr4["TermsAndConditions"] = sqf.Order.TermsAndConditions;
            //dr4["TotalBeforeTax"] = sqf.Order.TotalAfterTax;
            //dr4["TotalTax"] = sqf.Order.TotalTax.ToString();
            //dr4["TotalAfterTax"] = sqf.Order.TotalAfterTax.ToString();
            //dr4["PONo"] = sqf.Order.OrderNo;
            //dr4["PODate"] = sqf.Order.OrderDate.Date.ToString("dd/M/yyyy");
            //dr4["DeliveryDate"] = sqf.Order.DeletedDate;
            //dr4["PINo"] = sqf.Order.PurchaseInvoiceNo;
            //dt4.Rows.Add(dr4);

            //ReportDataSource reportDataSource4 = new ReportDataSource();
            //reportDataSource4.Name = "PurchaseOrderUniqueRecordDetailsDataSet"; // Name of the DataSet we set in .rdlc
            //reportDataSource4.Value = dt4;
            // company details
            /*****Define column*****/
            DataTable dt1 = new DataTable();
            dt1.Columns.Add(new DataColumn("CompanyName", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyLogo", typeof(byte[])));
            dt1.Columns.Add(new DataColumn("CompanyRegNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyGstNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("Telephone", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyFax", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyEmail", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine1", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine2", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCity", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToState", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCountary", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToPostCode", typeof(string)));
           
            /*****End  column*****/
            /*****data part*******/

            DataRow dr1 = dt1.NewRow();
            dr1["CompanyName"] = sqf.InvoiceDebitPayement.CompanyName;
            dr1["CompanyLogo"] = sqf.InvoiceDebitPayement.CompanyLogo;
            dr1["CompanyRegNumber"] = sqf.InvoiceDebitPayement.CompanyRegNumber;
            dr1["CompanyGstNumber"] = sqf.InvoiceDebitPayement.CompanyGstNumber;
            dr1["Telephone"] = sqf.InvoiceDebitPayement.Telephone;
            dr1["CompanyFax"] = sqf.InvoiceDebitPayement.CompanyFax;
            dr1["CompanyEmail"] = sqf.InvoiceDebitPayement.CompanyEmail;
            dr1["CompanyBillToAddressLine1"] = sqf.InvoiceDebitPayement.CompanyBillToAddressLine1;
            dr1["CompanyBillToAddressLine2"] = sqf.InvoiceDebitPayement.CompanyBillToAddressLine2;
            dr1["CompanyBillToCity"] = sqf.InvoiceDebitPayement.CompanyBillToCity;
            dr1["CompanyBillToState"] = sqf.InvoiceDebitPayement.CompanyBillToState;
            dr1["CompanyBillToCountary"] = sqf.InvoiceDebitPayement.CompanyBillToCountary;
            dr1["CompanyBillToPostCode"] = sqf.InvoiceDebitPayement.CompanyBillToPostCode;
          
            dt1.Rows.Add(dr1);
            /*****data part*******/
            ReportDataSource reportDataSource1 = new ReportDataSource();
            reportDataSource1.Name = "CompanyDetailsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource1.Value = dt1;
            // end of company details

            //Supplier Details 
            /****column defn**/
            DataTable dt2 = new DataTable();
            dt2.Columns.Add(new DataColumn("SupplierName", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToLine1", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToLine2", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToCity", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToState", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToCountary", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToPostCode", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierTelephone", typeof(string)));

            /****end column defn**/
            /**data****/
            DataRow dr2 = dt2.NewRow();
            dr2["SupplierName"] = sqf.InvoiceDebitPayement.SupplierName;
            dr2["SupplierBillToLine1"] = sqf.InvoiceDebitPayement.SupplierBillAddress1;
            dr2["SupplierBillToLine2"] = sqf.InvoiceDebitPayement.SupplierBillAddress2;
            dr2["SupplierBillToCity"] = sqf.InvoiceDebitPayement.SupplierBillAddressCity;
            dr2["SupplierBillToState"] = sqf.InvoiceDebitPayement.SupplierBillAddressState;
            dr2["SupplierBillToCountary"] = sqf.InvoiceDebitPayement.SupplierBillAddressCountary;
            dr2["SupplierBillToPostCode"] = sqf.InvoiceDebitPayement.SupplierBillPostCode;
            dr2["SupplierTelephone"] = sqf.InvoiceDebitPayement.SupplierTelephone;

            /**end data****/
            dt2.Rows.Add(dr2);
            ReportDataSource reportDataSource2 = new ReportDataSource();
            reportDataSource2.Name = "SupplierDetailsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource2.Value = dt2;
            //End Customer Details 

            //option 
            DataTable dt3 = new DataTable();
            dt3.Columns.Add(new DataColumn("CurrencyCode", typeof(string)));
            DataRow dr3 = dt3.NewRow();
            dr3["CurrencyCode"] = sqf.InvoiceDebitPayement.CurrencyCode;
            dt3.Rows.Add(dr3);

            ReportDataSource reportDataSource3 = new ReportDataSource();
            reportDataSource3.Name = "OptionsDetailsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource3.Value = dt3;
            //end options
            string exefolder = System.Windows.Forms.Application.StartupPath;
            string reportPath = System.IO.Path.Combine(exefolder, @"PurchaseInvoiceDebitPayment.rdlc");
           
            reportViewer11.LocalReport.ReportPath = reportPath;
            //D:\DayUser\src\SAS - NEW\Client\SASClient\Reports\ReportsRdlc
            reportViewer11.LocalReport.DataSources.Clear();
            reportViewer11.LocalReport.DataSources.Add(reportDataSource);
            reportViewer11.LocalReport.DataSources.Add(reportDataSource1);
            reportViewer11.LocalReport.DataSources.Add(reportDataSource2);
            reportViewer11.LocalReport.DataSources.Add(reportDataSource3);
            //reportViewer11.LocalReport.DataSources.Add(reportDataSource4);
            reportViewer11.RefreshReport();
            // this.reportViewer1.Width = 75;
        }
        private void reportViewer_RenderingComplete(object sender, Microsoft.Reporting.WinForms.RenderingCompleteEventArgs e)
        {

        }
    }
}
