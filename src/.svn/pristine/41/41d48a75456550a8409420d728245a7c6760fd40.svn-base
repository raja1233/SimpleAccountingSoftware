using Microsoft.Reporting.WinForms;
using SDN.Purchasing.ViewModel;
using SDN.UI.Entities.Purchase;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace SASClient.Reports.ReportsPage
{
    /// <summary>
    /// Interaction logic for DebitNoteReportViewer.xaml
    /// </summary>
    public partial class DebitNoteReportViewer : UserControl
    {
        private DebitNoteViewModel _ViewModel;
        public DebitNoteReportViewer()
        {
            InitializeComponent();
            Type type = typeof(DebitNoteViewModel);

            //SalesInvoiceViewModel instance = (SalesInvoiceViewModel)Activator.CreateInstance(type);
            object obj = System.Runtime.Serialization.FormatterServices
             .GetUninitializedObject(type);
            _ViewModel = (DebitNoteViewModel)obj;

            this.DataContext = obj;

        }
        public DebitNoteReportViewer(DebitNoteViewModel model):this()
        {
            InitializeComponent();
            this.DataContext = _ViewModel;
            _ViewModel = model;
        }
        private void UserControl_LoadedDebitNote(object sender, RoutedEventArgs e)
        {
            //var a = _viewModel.PrintSalesQuotation();
            DebitNoteForm sqf = _ViewModel.PrintDebitNote();

            // System.Drawing.Image newImage = byteArrayToImage(sqf.Quotation.CompanyLogo);
            // System.Drawing.Image x = (Bitmap)((new ImageConverter()).ConvertFrom(sqf.Quotation.CompanyLogo));


            //this is for table grid

            DataTable dt = new DataTable();
            dt.Columns.Add(new DataColumn("PandSCode", typeof(string)));
            dt.Columns.Add(new DataColumn("PandSName", typeof(string)));
            dt.Columns.Add(new DataColumn("PIQty", typeof(string)));
            dt.Columns.Add(new DataColumn("Price", typeof(string)));
            dt.Columns.Add(new DataColumn("PIDiscount", typeof(string)));
            dt.Columns.Add(new DataColumn("PIAmount", typeof(string)));
            dt.Columns.Add(new DataColumn("GSTRate", typeof(string)));

            //ReportingDataset ds = new ReportingDataset();


            foreach (var item in sqf.InvoiceDetails)
            {
                DataRow dr = dt.NewRow();
                dr["PandSCode"] = item.PandSCode;
                dr["PandSName"] = item.PandSName;
                dr["PIQty"] = item.PIQty;
                dr["Price"] = item.Price.ToString();
                dr["PIDiscount"] = item.PIDiscount;
                dr["PIAmount"] = item.PIAmount.ToString();
                dr["GSTRate"] = item.GSTRate.ToString();
                dt.Rows.Add(dr);
            }



            ReportDataSource reportDataSource = new ReportDataSource();
            reportDataSource.Name = "DebitNoteDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource.Value = dt;
            
            // company details
            /*****Define column*****/
            DataTable dt1 = new DataTable();
            dt1.Columns.Add(new DataColumn("CompanyName", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyLogo", typeof(byte[])));
            dt1.Columns.Add(new DataColumn("CompanyRegNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyGstNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("Telephone", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyFax", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyEmail", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine1", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine2", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCity", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToState", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCountary", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToPostCode", typeof(string)));
            /*****End  column*****/
            /*****data part*******/

            DataRow dr1 = dt1.NewRow();
            dr1["CompanyName"] = sqf.DebitNote.CompanyName;
            dr1["CompanyLogo"] = sqf.DebitNote.CompanyLogo;
            dr1["CompanyRegNumber"] = sqf.DebitNote.CompanyRegNumber;
            dr1["CompanyGstNumber"] = sqf.DebitNote.CompanyGstNumber;
            dr1["Telephone"] = sqf.DebitNote.Telephone;
            dr1["CompanyFax"] = sqf.DebitNote.CompanyFax;
            dr1["CompanyEmail"] = sqf.DebitNote.CompanyEmail;
            dr1["CompanyBillToAddressLine1"] = sqf.DebitNote.CompanyBillToAddressLine1;
            dr1["CompanyBillToAddressLine2"] = sqf.DebitNote.CompanyBillToAddressLine2;
            dr1["CompanyBillToCity"] = sqf.DebitNote.CompanyBillToCity;
            dr1["CompanyBillToState"] = sqf.DebitNote.CompanyBillToState;
            dr1["CompanyBillToCountary"] = sqf.DebitNote.CompanyBillToCountary;
            dr1["CompanyBillToPostCode"] = sqf.DebitNote.CompanyBillToPostCode;

            dt1.Rows.Add(dr1);
            /*****data part*******/
            ReportDataSource reportDataSource1 = new ReportDataSource();
            reportDataSource1.Name = "CompanyDetailDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource1.Value = dt1;
            // end of company details

            //Customer Details
            /****column defn**/
            DataTable dt2 = new DataTable();
            dt2.Columns.Add(new DataColumn("SupplierName", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToLine1", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToLine2", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToCity", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToState", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToCountary", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierBillToPostCode", typeof(string)));
            dt2.Columns.Add(new DataColumn("TermsAndConditions", typeof(string)));
            dt2.Columns.Add(new DataColumn("TotalBeforeTax", typeof(string)));
            dt2.Columns.Add(new DataColumn("TotalTax", typeof(string)));
            dt2.Columns.Add(new DataColumn("TotalAfterTax", typeof(string)));
            dt2.Columns.Add(new DataColumn("DebitNo", typeof(string)));
            dt2.Columns.Add(new DataColumn("DebitDate", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierCreditNoteNo", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierCreditNoteDate", typeof(string)));
            dt2.Columns.Add(new DataColumn("SupplierCreditNoteAmount", typeof(string)));
            /****end column defn**/
            /**data****/
            DataRow dr2 = dt2.NewRow();
            dr2["SupplierName"] = sqf.DebitNote.SupplierName;
            dr2["SupplierBillToLine1"] = sqf.DebitNote.SupplierBillToLine1;
            dr2["SupplierBillToLine2"] = sqf.DebitNote.SupplierBillToLine2;
            dr2["SupplierBillToCity"] = sqf.DebitNote.SupplierBillToCity;
            dr2["SupplierBillToState"] = sqf.DebitNote.SupplierBillToState;
            dr2["SupplierBillToCountary"] = sqf.DebitNote.SupplierBillToCountary;
            dr2["SupplierBillToPostCode"] = sqf.DebitNote.SupplierBillToPostCode;
            dr2["TermsAndConditions"] = sqf.DebitNote.TermsAndConditions;
            dr2["TotalBeforeTax"] = sqf.DebitNote.TotalAfterTax;
            dr2["TotalTax"] = sqf.DebitNote.TotalTax.ToString();
            dr2["TotalAfterTax"] = sqf.DebitNote.TotalAfterTax.ToString();
            dr2["DebitNo"] = sqf.DebitNote.DebitNo;
            dr2["DebitDate"] = sqf.DebitNote.DebitDate;
            dr2["SupplierCreditNoteNo"] = sqf.DebitNote.SupplierCreditNoteNo;
            dr2["SupplierCreditNoteDate"] = sqf.DebitNote.SupplierCreditNoteDate;
            dr2["SupplierCreditNoteAmount"] = sqf.DebitNote.SupplierCreditNoteAmount;
            /**end data****/
            dt2.Rows.Add(dr2);
            ReportDataSource reportDataSource2 = new ReportDataSource();
            reportDataSource2.Name = "DebitNoteUniqueRecordDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource2.Value = dt2;
            //End Customer Details 

            //option 
            DataTable dt3 = new DataTable();
            dt3.Columns.Add(new DataColumn("CurrencyCode", typeof(string)));
            DataRow dr3 = dt3.NewRow();
            dr3["CurrencyCode"] = sqf.DebitNote.CurrencyCode;
            dt3.Rows.Add(dr3);

            ReportDataSource reportDataSource3 = new ReportDataSource();
            reportDataSource3.Name = "OptionDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource3.Value = dt3;
            //end options

            reportViewer4.LocalReport.ReportPath = "D:\\DayUser\\src\\SAS-NEW\\Client\\SASClient\\Reports\\ReportsRdlc\\DebitNote.rdlc"; // Path of the rdlc file 
           
            //D:\DayUser\src\SAS - NEW\Client\SASClient\Reports\ReportsRdlc
            reportViewer4.LocalReport.DataSources.Clear();
            reportViewer4.LocalReport.DataSources.Add(reportDataSource);
            reportViewer4.LocalReport.DataSources.Add(reportDataSource1);
            reportViewer4.LocalReport.DataSources.Add(reportDataSource2);
            reportViewer4.LocalReport.DataSources.Add(reportDataSource3);
            reportViewer4.RefreshReport();
            // this.reportViewer1.Width = 75;
        }
        private void reportViewer_RenderingComplete(object sender, Microsoft.Reporting.WinForms.RenderingCompleteEventArgs e)
        {

        }
    }
}
