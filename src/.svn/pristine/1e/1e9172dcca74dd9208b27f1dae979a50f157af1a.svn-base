using Microsoft.Reporting.WinForms;
using SASClient.Customers.ViewModel;
using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace SASClient.Reports.ReportsPage
{
    /// <summary>
    /// Interaction logic for SalesInvoiceCreditPayementReportViewer.xaml
    /// </summary>
    public partial class SalesInvoiceCreditPayementReportViewer : UserControl
    {
        private InvoiceCreditPaymentsViewModel _viewModel;
        public SalesInvoiceCreditPayementReportViewer()
        {
            InitializeComponent();
            Type type = typeof(InvoiceCreditPaymentsViewModel);
            object obj = System.Runtime.Serialization.FormatterServices
           .GetUninitializedObject(type);
            _viewModel = (InvoiceCreditPaymentsViewModel)obj;
            this.DataContext = obj;
        }
        public SalesInvoiceCreditPayementReportViewer(InvoiceCreditPaymentsViewModel model):this()
        {
            InitializeComponent();
            this.DataContext = _viewModel;
            _viewModel = model;
        }
        private void UserControl_LoadedSalesInvoiceCreditPayment(object sender, RoutedEventArgs e)
        {
            //var a = _viewModel.PrintSalesQuotation();
            var sqf = _viewModel.PrintSalesInvoiceCreditPayment();



            //this is for table grid

            DataTable dt = new DataTable();
            dt.Columns.Add(new DataColumn("TransactionNo", typeof(string)));
            dt.Columns.Add(new DataColumn("TransactionDateStr", typeof(string)));
            dt.Columns.Add(new DataColumn("InvoiceAmountStr", typeof(string)));
            dt.Columns.Add(new DataColumn("CNPaymentStr", typeof(string)));
            dt.Columns.Add(new DataColumn("BalanceStr", typeof(string)));


            ////ReportingDataset ds = new ReportingDataset();

            foreach (var item in sqf.LstInvoiceDetails)
            {
                DataRow dr = dt.NewRow();
                dr["TransactionNo"] = item.TransactionNo;
                dr["TransactionDateStr"] = item.TransactionDateStr;
                dr["InvoiceAmountStr"] = item.InvoiceAmountStr;
                dr["CNPaymentStr"] = item.CNPaymentStr;
                dr["BalanceStr"] = item.BalanceStr;
                dt.Rows.Add(dr);
            }

            ReportDataSource reportDataSource = new ReportDataSource();
            reportDataSource.Name = "USP_CustomerStatementInvCNPayment"; // Name of the DataSet we set in .rdlc
            reportDataSource.Value = dt;

            ////// company details
            /////*****Define column*****/
            DataTable dt1 = new DataTable();
            dt1.Columns.Add(new DataColumn("CompanyName", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyLogo", typeof(byte[])));
            dt1.Columns.Add(new DataColumn("CompanyRegNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyGstNumber", typeof(string)));
            dt1.Columns.Add(new DataColumn("Telephone", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyFax", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyEmail", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine1", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToAddressLine2", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCity", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToState", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToCountary", typeof(string)));
            dt1.Columns.Add(new DataColumn("CompanyBillToPostCode", typeof(string)));
            /////*****End  column*****/
            /////*****data part*******/

            DataRow dr1 = dt1.NewRow();
            dr1["CompanyName"] = sqf.InvoiceCreditPayement.CompanyName;
            dr1["CompanyLogo"] = sqf.InvoiceCreditPayement.CompanyLogo;
            dr1["CompanyRegNumber"] = sqf.InvoiceCreditPayement.CompanyRegNumber;
            dr1["CompanyGstNumber"] = sqf.InvoiceCreditPayement.CompanyGstNumber;
            dr1["Telephone"] = sqf.InvoiceCreditPayement.Telephone;
            dr1["CompanyFax"] = sqf.InvoiceCreditPayement.CompanyFax;
            dr1["CompanyEmail"] = sqf.InvoiceCreditPayement.CompanyEmail;
            dr1["CompanyBillToAddressLine1"] = sqf.InvoiceCreditPayement.CompanyBillToAddressLine1;
            dr1["CompanyBillToAddressLine2"] = sqf.InvoiceCreditPayement.CompanyBillToAddressLine2;
            dr1["CompanyBillToCity"] = sqf.InvoiceCreditPayement.CompanyBillToCity;
            dr1["CompanyBillToState"] = sqf.InvoiceCreditPayement.CompanyBillToState;
            dr1["CompanyBillToCountary"] = sqf.InvoiceCreditPayement.CompanyBillToCountary;
            dr1["CompanyBillToPostCode"] = sqf.InvoiceCreditPayement.CompanyBillToPostCode;

            dt1.Rows.Add(dr1);
            ///*****data part*******/
            ReportDataSource reportDataSource1 = new ReportDataSource();
            reportDataSource1.Name = "CompanyDetailsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource1.Value = dt1;
            ////// end of company details

            //////Customer Details
            /////****column defn**/
            DataTable dt2 = new DataTable();
            dt2.Columns.Add(new DataColumn("CustomerName", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillAddress1", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillAddress2", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillAddressCity", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillAddressState", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillAddressCountary", typeof(string)));
            dt2.Columns.Add(new DataColumn("CustomerBillPostCode", typeof(string)));

            /////****end column defn**/
            /////**data****/
            DataRow dr2 = dt2.NewRow();
            dr2["CustomerName"] = sqf.InvoiceCreditPayement.CustomerName;
            dr2["CustomerBillAddress1"] = sqf.InvoiceCreditPayement.CustomerBillAddress1;
            dr2["CustomerBillAddress2"] = sqf.InvoiceCreditPayement.CustomerBillAddress2;
            dr2["CustomerBillAddressCity"] = sqf.InvoiceCreditPayement.CustomerBillAddressCity;
            dr2["CustomerBillAddressState"] = sqf.InvoiceCreditPayement.CustomerBillAddressState;
            dr2["CustomerBillAddressCountary"] = sqf.InvoiceCreditPayement.CustomerBillAddressCountary;
            dr2["CustomerBillPostCode"] = sqf.InvoiceCreditPayement.CustomerBillPostCode;

            /////**end data****/
            dt2.Rows.Add(dr2);
            ReportDataSource reportDataSource2 = new ReportDataSource();
            reportDataSource2.Name = "CustomerDetailsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource2.Value = dt2;
            //////End Customer Details 

            //////option 
            DataTable dt3 = new DataTable();
            dt3.Columns.Add(new DataColumn("CurrencyCode", typeof(string)));
            DataRow dr3 = dt3.NewRow();
            dr3["CurrencyCode"] = sqf.InvoiceCreditPayement.CurrencyCode;
            dt3.Rows.Add(dr3);

            ReportDataSource reportDataSource3 = new ReportDataSource();
            reportDataSource3.Name = "OptionsDataSet"; // Name of the DataSet we set in .rdlc
            reportDataSource3.Value = dt3;
            //////end options

            ////end of binding table
            string exefolder = System.Windows.Forms.Application.StartupPath;
            string reportPath = System.IO.Path.Combine(exefolder, @"SalesInvoiceCreditPayment.rdlc");     
            reportViewer8.LocalReport.ReportPath = reportPath;
            reportViewer8.LocalReport.DataSources.Clear();
            reportViewer8.LocalReport.DataSources.Add(reportDataSource);
            reportViewer8.LocalReport.DataSources.Add(reportDataSource1);
            reportViewer8.LocalReport.DataSources.Add(reportDataSource2);
            reportViewer8.LocalReport.DataSources.Add(reportDataSource3);
            
            reportViewer8.RefreshReport();
            // this.reportViewer1.Width = 75;
        }
        private void reportViewer_RenderingComplete(object sender, Microsoft.Reporting.WinForms.RenderingCompleteEventArgs e)
        {

        }
    }
}
