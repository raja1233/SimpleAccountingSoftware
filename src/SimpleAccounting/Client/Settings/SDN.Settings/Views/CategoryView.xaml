<UserControl x:Class="SDN.Settings.Views.CategoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SDN.Settings.Views"
             xmlns:ctr="clr-namespace:SDN.Common;assembly=SDN.Common"
               xmlns:helpers="clr-namespace:SDN.Common.Converter;assembly=SDN.Common" 
              xmlns:my="clr-namespace:SDN.Common;assembly=SDN.Common"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
            Height="Auto" Width="Auto" 
             mc:Ignorable="d">
    <UserControl.Resources>
        <!--<Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="SeparatorBrush" Value="Transparent" />
            <Setter Property="BorderBrush" Value="gray"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Cursor" Value="Hand" />
        </Style>-->

        <helpers:SelectedItemConvertor x:Key="SelectedItemToItemsSource"/>
        <helpers:RowToIndexConverter x:Key="RowToIndexConverter"/>
        <!--<locals:CategoryViewModel x:Key="CatViewModel"></locals:CategoryViewModel>-->
        <!--<helpers:DefaultConverter x:Key="DefaultConvertor"></helpers:DefaultConverter>-->
        <!-- This is the template for the user form, used by the itemsControl below -->
        <DataTemplate x:Key="ContentGrid" >
            <Border Background="Transparent" BorderBrush="Black" BorderThickness="1" 
                    CornerRadius="0" >
                <Grid Margin="10" >
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Height" Value="20" />
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Category" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock  Grid.Row="1" Grid.Column="0"  Text="{Binding ContentType}" >
                    </TextBlock>
                    <TextBox IsEnabled="False" Text="{Binding CategoryName, BindingGroupName=Group1, UpdateSourceTrigger=PropertyChanged}" Margin="7,0,5,0"
                             Grid.Column="1" Grid.Row="0"/>
                    <DockPanel Grid.Column="1" Grid.Row="1">
                        <TextBlock Foreground="Red" Text="*"/>
                        <TextBox Name="txtContentName" HorizontalAlignment="Left" Text="{Binding ContentName, BindingGroupName=Group1,Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}" Margin="3,2,7,0"   KeyDown="txtContentName_KeyDown" MaxWidth="200" Height="Auto"
                          KeyUp="txtContentName_KeyUp"  MaxLength="200" TextWrapping="Wrap" MinWidth="200" MaxHeight="300" MinHeight="25">
                        </TextBox>
                    </DockPanel>
                    <TextBlock Text="Set Default" Grid.Row="2" Grid.Column="0"></TextBlock>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" x:Name="chksetDefault" Grid.Row="2" Grid.Column="1" Margin="7,2,0,0"></CheckBox>
                </Grid>
            </Border>
        </DataTemplate>

    </UserControl.Resources>
    <ScrollViewer  HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid Margin="0,10,0,0">
            <Grid.RowDefinitions>

                <RowDefinition Height="0.75*" />
                <RowDefinition Height="4*" />
                <RowDefinition Height="5*" />
                <RowDefinition Height="0.75*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"  ></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="4*" ></ColumnDefinition>


            </Grid.ColumnDefinitions>
            <!--<GroupBox Header="Categories" HorizontalAlignment="Center" VerticalAlignment="Center" Height="383" Margin="5,5,5,5">
        </GroupBox>-->
            <TextBlock FontStyle="Italic" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Click on a Category Name and add or edit Category Contents"
           Margin="10,0,0,0" Foreground="gray" HorizontalAlignment="Left" VerticalAlignment="Top"></TextBlock>

            <Grid Grid.Row="1" Grid.Column="0" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>

                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="5,5,5,5" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}">-->
                <!--<StackPanel>-->
                <StackPanel Orientation="Horizontal" >
                    <Grid   Width="300" MaxWidth="400" Height="{Binding CategoryHeight}">
                        <DataGrid x:Name="CustomGridLines" ItemsSource="{Binding BackGroundLines}" Grid.Column="0" 
                          Height="{Binding ElementName=dg1,Path=ActualHeight}" GridLinesVisibility="All"   Width="{Binding ElementName=dg1,Path=ActualWidth}"
                          HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" AutoGenerateColumns="False" 
                           HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"
                          ColumnHeaderStyle="{StaticResource BackHeaderStyle20}" HeadersVisibility="All" Margin="0,0,0,0"  >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="" Binding="{Binding Col0}" Width="298" ></DataGridTextColumn>
                                <!--<DataGridTextColumn Header="" Binding="{Binding Col1}"  Width="180"></DataGridTextColumn>
                                <DataGridTextColumn Header="" Binding="{Binding Col2}"  Width="180"></DataGridTextColumn>
                                <DataGridTextColumn Header="" Binding="{Binding Col3}"  Width="180"></DataGridTextColumn>
                                <DataGridTextColumn Header="" Binding="{Binding Col4}"  Width="164"></DataGridTextColumn>-->
                            </DataGrid.Columns>

                        </DataGrid>
                        <DataGrid GridLinesVisibility="All" Grid.Column="0" Background="Transparent" x:Name="dg1" IsReadOnly="True"  BorderThickness="1" Width="300" MaxWidth="400" MinHeight="200" Height="{Binding CategoryHeight}"
                              ItemsSource="{Binding Path=Category}" IsSynchronizedWithCurrentItem="True" CanUserAddRows="False" CanUserDeleteRows="False" 
                              SelectedItem="{Binding SelectedCategory, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ColumnHeaderStyle="{StaticResource HeaderStyle20}" 
                              SelectedValuePath="ID" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False"
                               AutoGenerateColumns="False" BorderBrush="Black" KeyUp="dg1_KeyUp" KeyDown="dg1_KeyDown" Loaded="dg1_Loaded">
                            <DataGrid.Columns>
                                <!--<DataGridTextColumn  Header="" Width="30" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource RowToIndexConverter}}" IsReadOnly="True" />-->
                                <DataGridTextColumn Width="298" MaxWidth="400" Header="Category Name" Binding="{Binding Path=CategoryName}" >
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Black"/>
                                    </Style.Resources>
                                </Style>
                            </DataGrid.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectChangedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected"
                                                     Value="True">
                                            <Setter Property="BorderBrush"
                                                 Value="Black" />
                                            <Setter Property="Background"
                                                    Value="Black" />
                                            <Setter Property="Foreground"
                                                 Value="White" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected"
                                                     Value="True">
                                            <Setter Property="BorderBrush"
                                                 Value="Black" />
                                            <Setter Property="Background"
                                                    Value="Black" />
                                            <Setter Property="Foreground"
                                                 Value="White" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </Grid>
                </StackPanel>
                <!--</StackPanel>-->

            </Grid>

            <Grid  Margin="5,0,5,0" Grid.Column="1" Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" >

                        <Grid>
                          
                            <DataGrid x:Name="CustomGridLinesCatContent" ItemsSource="{Binding BackGroundLines}" Grid.Column="0"
                          Height="{Binding ElementName=grdCategoryContent,Path=ActualHeight}" GridLinesVisibility="All"   Width="{Binding ElementName=grdCategoryContent,Path=ActualWidth}"
                          HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" AutoGenerateColumns="False" 
                           HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"
                          ColumnHeaderStyle="{StaticResource BackHeaderStyle20}" HeadersVisibility="All" Margin="0 0 0 0"  >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="" Binding="{Binding Col0}" Width="50"></DataGridTextColumn>
                                    <DataGridTextColumn Header="" Binding="{Binding Col1}"  Width="1" Visibility="Hidden"></DataGridTextColumn>
                                <DataGridTextColumn Header="" Binding="{Binding Col2}"  Width="297"></DataGridTextColumn>
                                    <DataGridTextColumn Header="" Binding="{Binding Col3}"  Width="1" Visibility="Hidden"></DataGridTextColumn>
                                <!--<DataGridTextColumn Header="" Binding="{Binding Col4}"  Width="164"></DataGridTextColumn>-->
                                </DataGrid.Columns>

                            </DataGrid>

                            <DataGrid GridLinesVisibility="All" Grid.Column="0" Background="Transparent" ColumnHeaderStyle="{StaticResource HeaderStyle20}" ItemsSource="{Binding SelectedContent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"  CanUserSortColumns="False" BorderBrush="Black" 
                 CanUserAddRows="False" CanUserDeleteRows="False" SelectedItem="{Binding SelectContent,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                   Name="grdCategoryContent" AutoGenerateColumns="False" IsReadOnly="True" SelectedIndex="{Binding SelectedIndex}" SelectedValuePath="ContentID"
                 Width="350" Height="{Binding CategoryHeight}" CanUserResizeColumns="True" CanUserResizeRows="False"  KeyUp="grdCategoryContent_KeyUp" KeyDown="grdCategoryContent_KeyDown" Loaded="grdCategoryContent_Loaded" >

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Header="Default" Width="50">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <RadioButton  GroupName="grpDefault"   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 0"
                               IsChecked="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="False">
                                                </RadioButton>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="" Binding="{Binding Path=ID}" Visibility="Hidden" Width="1">
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="297" Header="Category Contents" Binding="{Binding Path=ContentName}" IsReadOnly="True" >
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap"  />

                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Width="1" Header="" Visibility="Hidden" Binding="{Binding Predefined}"></DataGridTextColumn>
                                    <!--<DataGridTextColumn Header="" Binding="{Binding ContentType}" IsReadOnly="True"/>-->
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridRow">
                                        <Style.Resources>
                                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="black"/>
                                        </Style.Resources>
                                    </Style>
                                </DataGrid.Resources>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectContentChangedCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected"
                                                     Value="True">
                                                <Setter Property="BorderBrush"
                                                 Value="Black" />
                                                <Setter Property="Background"
                                                    Value="Black" />
                                                <Setter Property="Foreground"
                                                 Value="White" />

                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected"
                                                     Value="True">
                                                <Setter Property="BorderBrush"
                                                 Value="Black" />
                                                <Setter Property="Background"
                                                    Value="Black" />
                                                <Setter Property="Foreground"
                                                 Value="White" />

                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </Grid>

            <ItemsControl Grid.Column="2" Grid.Row="1" 
                      BindingGroup="{Binding UpdateBindingGroup, Mode=TwoWay}"
                      ItemTemplate="{StaticResource ContentGrid}"
                     Name="ContentsItemControl"
                      ItemsSource="{Binding SelectedCategoryContent, Converter={StaticResource SelectedItemToItemsSource}}" 
                      VerticalAlignment="Top" HorizontalAlignment="Left" />

            <Grid Grid.Row="2" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Bottom">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>

                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="5,5,5,5" Background="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}">-->
                <StackPanel>
                    <StackPanel Orientation="Horizontal" >


                        <DataGrid GridLinesVisibility="All" Grid.ColumnSpan="2" Background="Transparent" x:Name="dg2" IsReadOnly="True"  BorderThickness="1" Width="300" MaxWidth="400"
                              ItemsSource="{Binding Path=PSCategory}" IsSynchronizedWithCurrentItem="True" CanUserAddRows="False" CanUserDeleteRows="False"
                              SelectedItem="{Binding SelectedPSCategory, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                              SelectedValuePath="ID" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False"
                              HeadersVisibility="Row" AutoGenerateColumns="False" BorderBrush="Black" KeyUp="dg1_KeyUp" KeyDown="dg1_KeyDown" Loaded="dg1_Loaded">
                            <DataGrid.Columns >
                                <!--<DataGridTextColumn Header="" Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource RowToIndexConverter}}" IsReadOnly="True" />-->
                                <DataGridTextColumn Width="297" MaxWidth="297" Header="Category Name" Binding="{Binding Path=CategoryName}" >

                                </DataGridTextColumn>

                            </DataGrid.Columns>
                            <DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Black"/>
                                    </Style.Resources>
                                </Style>
                            </DataGrid.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectPSChangedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected"
                                                     Value="True">
                                            <Setter Property="BorderBrush"
                                                 Value="Black" />
                                            <Setter Property="Background"
                                                    Value="Black" />
                                            <Setter Property="Foreground"
                                                 Value="White" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected"
                                                     Value="True">
                                            <Setter Property="BorderBrush"
                                                 Value="Black" />
                                            <Setter Property="Background"
                                                    Value="Black" />
                                            <Setter Property="Foreground"
                                                 Value="White" />

                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>

                    </StackPanel>
                </StackPanel>

            </Grid>

            <Grid  Margin="5,0,5,0" Grid.Column="1" Grid.Row="2" VerticalAlignment="Bottom" >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" >
                        <TextBox AcceptsReturn="True" Text="{Binding SelectedPSContent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="350" MaxHeight="280"  Height="202" TextWrapping="Wrap" MaxLength="500"></TextBox>
                    </StackPanel>                    
                    </StackPanel>
            </Grid>

            <TextBlock Text="{Binding Error,UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Margin="5,190,0,0"
         Foreground="Red"  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Top" 
                   Grid.ColumnSpan="3" ></TextBlock>

            <DockPanel  Grid.Row="0" Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,5">
                <Button  Content="Delete" Command="{Binding DeleteCommand}" Name="btnDelete" Style="{DynamicResource ButtonStyle}"
                             ></Button>

                <Button   Content="New"  Name="btnNew"  Margin="10,0,6,0" Style="{DynamicResource ButtonStyle}" 
                      Command="{Binding NewRowCommand}" KeyDown="btnNew_KeyDown" KeyUp="btnNew_KeyUp" MouseLeave="btnNew_MouseLeave"/>

                <Button   Content="Save"  Name="btnSave1"  Margin="10,0,6,0" Style="{DynamicResource ButtonStyle}" 
                      Command="{Binding SaveRowCommand}"/>
            </DockPanel>

            <Grid Grid.Row="3" Grid.Column="2" Margin="0 0 10 10" HorizontalAlignment="Right">
                <Grid.RowDefinitions></Grid.RowDefinitions>

                <DockPanel  >
                    <Button Margin="0 0 0 0" Content="Close"  Name="btnOk" 
                Style="{DynamicResource ButtonStyle}" HorizontalAlignment="Right" ></Button>
                    <!--<Button Margin="0 0 10 0" Content="Save" Command="{Binding SaveCommand}" Name="btnSave" 
                Style="{DynamicResource ButtonStyle}" HorizontalAlignment="Left" ></Button>-->
                    <!--<Button  Margin="10 0 0 0"  Content="Close" Command="{Binding CancelCommand}" Name="btnCancel"
                Style="{DynamicResource ButtonStyle}" HorizontalAlignment="Left"  ></Button>-->
                </DockPanel>
            </Grid>


        </Grid>
    </ScrollViewer>
</UserControl>
