using Microsoft.Practices.Prism.Commands;
using Microsoft.Practices.Prism.Events;
using Microsoft.Practices.Prism.Regions;
using Microsoft.Practices.ServiceLocation;
using SASClient.CashBank.Views;
using SASClient.Product.View;
using SASClient.Purchasing.View;
using SDN.CashBank.ViewModels;
using SDN.CashBank.Views;
using SDN.Common;
using SDN.Product.View;
using SDN.Purchasing.View;
using SDN.Sales.Views;
using SDN.UI.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SASClient.CloseRequest
{
    public class CloseView :ViewModelBase
    {
        //public CloseRequestNew()
        //{
        //}
        private readonly IRegionManager regionManager;
        private readonly IEventAggregator eventAggregator;

        public CloseView(IRegionManager regionManager, IEventAggregator eventAggregator)
        {
            this.regionManager = regionManager;
            this.eventAggregator = eventAggregator;
        }

        //private bool? _CashBankStatementTabTrue;

        //public bool? CashBankStatementTabTrue
        //{
        //    get
        //    {
        //        return _CashBankStatementTabTrue;
        //    }
        //    set
        //    {
        //        _CashBankStatementTabTrue = value;
        //        OnPropertyChanged("CashBankStatementTabTrue");
        //    }
        //}



        public void CloseViewRequest(string Filename)
        {
            //var mainregion = 0;
            
            //CashAndBankTabViewModel obj = new CashAndBankTabViewModel(regionManager, eventAggregator);
            try
            {
                if (!string.IsNullOrEmpty(Filename))
                {
                    
                    switch (Filename)
                    {

                        case "MainView":
                            //var view = ServiceLocator.Current.GetInstance<MainView>();
                            var h = this.regionManager.Regions[RegionNames.MainRegion].Views;
                            var l = h.First();
                            //var o = l.GetType().Name;
                            IRegion regiona = this.regionManager.Regions[RegionNames.MainRegion];
                            //regiona.Add(l);
                            if (regiona != null)
                            {
                                regiona.Activate(l);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(false);
                            break;

                        case "CashBankStatement":
                            SharedValues.getValue = "CashBankStatementTab";
                            var tabview = ServiceLocator.Current.GetInstance<CashBankTabView>();
                            var tabregion = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion.Add(tabview);
                            if (tabregion != null)
                            {
                                tabregion.Activate(tabview);
                            }
                            var mainview = ServiceLocator.Current.GetInstance<CashBankStatement>();
                            var mainregion = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion.Add(mainview);
                            if (mainregion != null)
                            {
                                mainregion.Activate(mainview);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Cash & Bank Statement");
             
                            break;

                        case "PayMoneyListView":
                            //SharedValues.NewClick = "New";
                            SharedValues.getValue = "PayMoneyTab";
                            var tabview1 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion1 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion1.Add(tabview1);
                            if (tabregion1 != null)
                            {
                                tabregion1.Activate(tabview1);
                            }

                            var view1 = ServiceLocator.Current.GetInstance<PayMoneyListView>();
                            var region1 = this.regionManager.Regions[RegionNames.MainRegion];
                            //var mainregion = this.regionManager.Regions[RegionNames.MainRegion];
                            region1.Add(view1);
                            if (region1 != null)
                            {
                                region1.Activate(view1);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);

                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Pay Money List");
                            break;

                        case "PayMoneyView":
                            SharedValues.getValue = "PayMoneyTab";
                            //SharedValues.NewClick = "New";

                            var tabview2 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion2 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion2.Add(tabview2);
                            if (tabregion2 != null)
                            {
                                tabregion2.Activate(tabview2);
                            }

                            var view2 = ServiceLocator.Current.GetInstance<PayMoneyView>();

                            var region2 = this.regionManager.Regions[RegionNames.MainRegion];
                            region2.Add(view2);
                            if (region2 != null)
                            {
                                region2.Activate(view2);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Pay Money");
                            break;

                        case "ReceiveMoneyListView":
                            SharedValues.getValue = "ReceiveMoneyTab";
                            var tabview3 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion3 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion3.Add(tabview3);
                            if (tabregion3 != null)
                            {
                                tabregion3.Activate(tabview3);
                            }

                            var view3 = ServiceLocator.Current.GetInstance<ReceiveMoneyListView>();
                            var region3 = this.regionManager.Regions[RegionNames.MainRegion];
                            region3.Add(view3);
                            if (region3 != null)
                            {
                                region3.Activate(view3);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);

                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Receive Money List");
                            break;
                        case "ReceiveMoneyView":

                            SharedValues.getValue = "ReceiveMoneyTab";
                            var tabview4 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion4 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion4.Add(tabview4);
                            if (tabregion4 != null)
                            {
                                tabregion4.Activate(tabview4);
                            }

                            var view4 = ServiceLocator.Current.GetInstance<ReceiveMoneyView>();

                            var region4 = this.regionManager.Regions[RegionNames.MainRegion];
                            region4.Add(view4);
                            if (region4 != null)
                            {
                                region4.Activate(view4);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);

                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Receive Money Form");
                            break;

                        case "RefundToCustomerView":
                            SharedValues.getValue = "RefundToCustomerTab";

                            var tabview5 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion5 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion5.Add(tabview5);
                            if (tabregion5 != null)
                            {
                                tabregion5.Activate(tabview5);
                            }

                            var view5 = ServiceLocator.Current.GetInstance<RefundToCustomerView>();
                            var region5 = this.regionManager.Regions[RegionNames.MainRegion];
                            region5.Add(view5);
                            if (region5 != null)
                            {
                                region5.Activate(view5);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Refund To Customer Form");
                            break;
                        case "RefundToCustomersListView":
                            SharedValues.getValue = "RefundToCustomerTab";

                            var tabview6 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion6 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion6.Add(tabview6);
                            if (tabregion6 != null)
                            {
                                tabregion6.Activate(tabview6);
                            }
                            var view6 = ServiceLocator.Current.GetInstance<RefundToCustomersListView>();
                            var region6 = this.regionManager.Regions[RegionNames.MainRegion];
                            region6.Add(view6);

                            if (region6 != null)
                            {
                                region6.Activate(view6);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Refund To Customers List");
                            break;
                        case "RefundFromSupplierView":
                            SharedValues.getValue = "RefundFromSupplierTab";

                            var tabview7 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion7 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion7.Add(tabview7);
                            if (tabregion7 != null)
                            {
                                tabregion7.Activate(tabview7);
                            }

                            var view7 = ServiceLocator.Current.GetInstance<RefundFromSupplierView>();
                            var region7 = this.regionManager.Regions[RegionNames.MainRegion];
                            region7.Add(view7);
                            if (region7 != null)
                            {
                                region7.Activate(view7);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Refund From Supplier Form");
                            break;
                        case "RefundFromSuppliersListView":
                            SharedValues.getValue = "RefundFromSupplierTab";

                            var tabview8 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion8 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion8.Add(tabview8);
                            if (tabregion8 != null)
                            {
                                tabregion8.Activate(tabview8);
                            }

                            var view8 = ServiceLocator.Current.GetInstance<RefundFromSuppliersListView>();
                            var region8 = this.regionManager.Regions[RegionNames.MainRegion];
                            region8.Add(view8);
                            if (region8 != null)
                            {
                                region8.Activate(view8);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Refund From Suppliers List");
                            break;

                        case "TransferMoneyListView":
                            SharedValues.getValue = "TransferMoneyTab";
                            var tabview10 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion10 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion10.Add(tabview10);
                            if (tabregion10 != null)
                            {
                                tabregion10.Activate(tabview10);
                            }
                            var view10 = ServiceLocator.Current.GetInstance<TransferMoneyListView>();
                            var region10 = this.regionManager.Regions[RegionNames.MainRegion];
                            region10.Add(view10);
                            if (region10 != null)
                            {
                                region10.Activate(view10);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Transfer Money List");
                            break;

                        case "TransferMoneyView":

                            SharedValues.getValue = "TransferMoneyTab";
                            var tabview11 = ServiceLocator.Current.GetInstance<CashBankTabView>();

                            var tabregion11 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion11.Add(tabview11);
                            if (tabregion11 != null)
                            {
                                tabregion11.Activate(tabview11);
                            }

                            var view11 = ServiceLocator.Current.GetInstance<TransferMoneyView>();

                            var region11 = this.regionManager.Regions[RegionNames.MainRegion];
                            region11.Add(view11);
                            if (region11 != null)
                            {
                                region11.Activate(view11);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);

                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Transfer Money Form");
                            break;
                        case "SalesQuotationListView":
                            SharedValues.getValue = "SalesQuotationTab";
                            var tabview12 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion12 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion12.Add(tabview12);
                            if (tabregion12 != null)
                            {
                                tabregion12.Activate(tabview12);
                            }

                            var view12 = ServiceLocator.Current.GetInstance<SalesQuotationListView>();

                            var region12 = this.regionManager.Regions[RegionNames.MainRegion];
                            region12.Add(view12);
                            if (region12 != null)
                            {
                                region12.Activate(view12);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Quotations List");
                            break;
                        case "SalesOrderListView":
                            SharedValues.getValue = "SalesOrderTab";
                            var tabview13 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion13 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion13.Add(tabview13);
                            if (tabregion13 != null)
                            {
                                tabregion13.Activate(tabview13);
                            }

                            var mainview13 = ServiceLocator.Current.GetInstance<SalesOrderListView>();

                            var mainregion13 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion13.Add(mainview13);
                            if (mainregion13 != null)
                            {
                                mainregion13.Activate(mainview13);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Orders List");
                            break;
                        case "SalesInvoiceListView":
                            SharedValues.getValue = "SalesInvoiceTab";
                            var tabview14 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion14 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion14.Add(tabview14);
                            if (tabregion14 != null)
                            {
                                tabregion14.Activate(tabview14);
                            }

                            var mainview14 = ServiceLocator.Current.GetInstance<SalesInvoiceListView>();

                            var mainregion14 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion14.Add(mainview14);
                            if (mainregion14 != null)
                            {
                                mainregion14.Activate(mainview14);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Invoices List");
                            break;
                        case "CreditNoteListView":
                            SharedValues.getValue = "CreditNoteTab";
                            var tabview15 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion15 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion15.Add(tabview15);
                            if (tabregion15 != null)
                            {
                                tabregion15.Activate(tabview15);
                            }

                            var mainview15 = ServiceLocator.Current.GetInstance<CreditNoteListView>();

                            var mainregion15 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion15.Add(mainview15);
                            if (mainregion15 != null)
                            {
                                mainregion15.Activate(mainview15);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Credit Notes List");
                            break;
                        case "PaymentFromCustomersListView":
                            SharedValues.getValue = "PaymentFromCustomerTab";
                            var tabview16 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion16 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion16.Add(tabview16);
                            if (tabregion16 != null)
                            {
                                tabregion16.Activate(tabview16);
                            }

                            var mainview16 = ServiceLocator.Current.GetInstance<PaymentFromCustomersListView>();

                            var mainregion16 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion16.Add(mainview16);
                            if (mainregion16 != null)
                            {
                                mainregion16.Activate(mainview16);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Payments From Customers List");
                            break;
                        case "SalesQuotationView":
                            SharedValues.getValue = "SalesQuotationTab";
                            var tabview17 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion17 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion17.Add(tabview17);
                            if (tabregion17 != null)
                            {
                                tabregion17.Activate(tabview17);
                            }

                            var mainview17 = ServiceLocator.Current.GetInstance<SalesQuotationView>();

                            var mainregion17 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion17.Add(mainview17);
                            if (mainregion17 != null)
                            {
                                mainregion17.Activate(mainview17);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Quotation Form");
                            break;
                        case "SalesOrderView":
                            SharedValues.getValue = "SalesOrderTab";
                            var tabview18 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion18 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion18.Add(tabview18);
                            if (tabregion18 != null)
                            {
                                tabregion18.Activate(tabview18);
                            }

                            var mainview18 = ServiceLocator.Current.GetInstance<SalesOrderView>();

                            var mainregion18 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion18.Add(mainview18);
                            if (mainregion18 != null)
                            {
                                mainregion18.Activate(mainview18);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Order Form");
                            break;
                        case "SalesInvoiceView":
                            SharedValues.getValue = "SalesInvoiceTab";
                            var tabview19 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion19 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion19.Add(tabview19);
                            if (tabregion19 != null)
                            {
                                tabregion19.Activate(tabview19);
                            }

                            var mainview19 = ServiceLocator.Current.GetInstance<SalesInvoiceView>();

                            var mainregion19 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion19.Add(mainview19);
                            if (mainregion19 != null)
                            {
                                mainregion19.Activate(mainview19);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Sales Invoice Form");
                            break;
                        case "CreditNoteView":
                            SharedValues.getValue = "CreditNoteTab";
                            var tabview20 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion20 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion20.Add(tabview20);
                            if (tabregion20 != null)
                            {
                                tabregion20.Activate(tabview20);
                            }

                            var mainview20 = ServiceLocator.Current.GetInstance<CreditNoteView>();

                            var mainregion20 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion20.Add(mainview20);
                            if (mainregion20 != null)
                            {
                                mainregion20.Activate(mainview20);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Credit Note Form");
                            break;
                        case "PaymentFromCustomersView":
                            SharedValues.getValue = "PaymentFromCustomerTab";
                            var tabview21 = ServiceLocator.Current.GetInstance<SalesTabView>();

                            var tabregion21 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion21.Add(tabview21);
                            if (tabregion21 != null)
                            {
                                tabregion21.Activate(tabview21);
                            }

                            var mainview21 = ServiceLocator.Current.GetInstance<PaymentFromCustomersView>();

                            var mainregion21 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion21.Add(mainview21);
                            if (mainregion21 != null)
                            {
                                mainregion21.Activate(mainview21);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Payment From Customer Form");
                            break;
                        case "PurchaseQuotationView":
                           
                            SharedValues.getValue = "PurchaseQuotationTab";
                            var tabview22 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion22 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion22.Add(tabview22);
                            if (tabregion22 != null)
                            {
                                tabregion22.Activate(tabview22);
                            }

                            var mainview22 = ServiceLocator.Current.GetInstance<PurchaseQuotationView>();

                            //PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            //var tabentityValue = tabentity as PurchaseTabEntity;
                            //tabentityValue.QuotationTabTrue = true;


                            var mainregion22 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion22.Add(mainview22);
                            if (mainregion22 != null)
                            {
                                mainregion22.Activate(mainview22);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Quotation Form");
                            break;
                        case "PurchaseQuotationListView":
                            SharedValues.getValue = "PurchaseQuotationTab";
                            var tabview23 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion23 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion23.Add(tabview23);
                            if (tabregion23 != null)
                            {
                                tabregion23.Activate(tabview23);
                            }

                            var mainview23 = ServiceLocator.Current.GetInstance<PurchaseQuotationListView>();

                            var mainregion23 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion23.Add(mainview23);
                            if (mainregion23 != null)
                            {
                                mainregion23.Activate(mainview23);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Quotations List");
                            break;
                        case "PurchaseOrderListView":
                            SharedValues.getValue = "PurchaseOrderTab";
                            var tabview24 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion24 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion24.Add(tabview24);
                            if (tabregion24 != null)
                            {
                                tabregion24.Activate(tabview24);
                            }
                            //PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            //var tabentityValue = tabentity as PurchaseTabEntity;
                            //tabentityValue.OrderTabTrue = true;

                            var mainview24 = ServiceLocator.Current.GetInstance<PurchaseOrderListView>();

                            var mainregion24 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion24.Add(mainview24);
                            if (mainregion24 != null)
                            {
                                mainregion24.Activate(mainview24);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Orders List");
                            break;
                        case "PurchaseOrderView":
                         
                            SharedValues.getValue = "PurchaseOrderTab";
                            var tabview25 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion25 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion25.Add(tabview25);
                            if (tabregion25 != null)
                            {
                                tabregion25.Activate(tabview25);
                            }
                            //PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            //var tabentityValue = tabentity as PurchaseTabEntity;
                            //tabentityValue.OrderTabTrue = true;

                            var mainview25 = ServiceLocator.Current.GetInstance<PurchaseOrderView>();

                            var mainregion25 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion25.Add(mainview25);
                            if (mainregion25 != null)
                            {
                                mainregion25.Activate(mainview25);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Order Form");
                            break;
                        case "PurchaseInvoiceListView":
                            SharedValues.getValue = "PurchaseInvoiceTab";
                            var tabview26 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion26 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion26.Add(tabview26);
                            if (tabregion26 != null)
                            {
                                tabregion26.Activate(tabview26);
                            }
                            //PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            //var tabentityValue = tabentity as PurchaseTabEntity;
                            //tabentityValue.OrderTabTrue = true;

                            var mainview26 = ServiceLocator.Current.GetInstance<PurchaseInvoiceListView>();

                            var mainregion26 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion26.Add(mainview26);
                            if (mainregion26 != null)
                            {
                                mainregion26.Activate(mainview26);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Invoices List");
                            break;
                        case "PurchaseInvoicePandSView":
                            
                            SharedValues.getValue = "PurchaseInvoiceTab";
                            var tabview27 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion27 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion27.Add(tabview27);
                            if (tabregion27 != null)
                            {
                                tabregion27.Activate(tabview27);
                            }
                            //PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            //var tabentityValue = tabentity as PurchaseTabEntity;
                            //tabentityValue.OrderTabTrue = true;

                            var mainview27 = ServiceLocator.Current.GetInstance<PurchaseInvoicePandSView>();

                            var mainregion27 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion27.Add(mainview27);
                            if (mainregion27 != null)
                            {
                                mainregion27.Activate(mainview27);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Purchase Invoice Form (Products & Services)");
                            break;
                        case "DebitNoteListView":
                            SharedValues.getValue = "DebitNoteTab";
                            var tabview28 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion28 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion28.Add(tabview28);
                            if (tabregion28 != null)
                            {
                                tabregion28.Activate(tabview28);
                            }
                            PurchaseTabEntity tabentity = new PurchaseTabEntity();
                            var tabentityValue = tabentity as PurchaseTabEntity;
                            tabentityValue.OrderTabTrue = true;

                            var mainview28 = ServiceLocator.Current.GetInstance<DebitNoteListView>();

                            var mainregion28 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion28.Add(mainview28);
                            if (mainregion28 != null)
                            {
                                mainregion28.Activate(mainview28);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Debit Notes List");
                            break;
                        case "DebitNoteView":
                            
                            SharedValues.getValue = "DebitNoteTab";
                            var tabview29 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion29 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion29.Add(tabview29);
                            if (tabregion29 != null)
                            {
                                tabregion29.Activate(tabview29);
                            }
                            PurchaseTabEntity tabentity2 = new PurchaseTabEntity();
                            var tabentityValue2 = tabentity2 as PurchaseTabEntity;
                            tabentityValue2.OrderTabTrue = true;

                            var mainview29 = ServiceLocator.Current.GetInstance<DebitNoteView>();

                            var mainregion29 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion29.Add(mainview29);
                            if (mainregion29 != null)
                            {
                                mainregion29.Activate(mainview29);
                            }////
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Debit Note Form");
                            break;
                        case "PaymentsToSuppliersListView":
                            SharedValues.getValue = "PaymentToSupplierTab";
                            var tabview30 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion30 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion30.Add(tabview30);
                            if (tabregion30 != null)
                            {
                                tabregion30.Activate(tabview30);
                            }
                            PurchaseTabEntity tabentity3 = new PurchaseTabEntity();
                            var tabentityValue3 = tabentity3 as PurchaseTabEntity;
                            tabentityValue3.OrderTabTrue = true;

                            var mainview30 = ServiceLocator.Current.GetInstance<PaymentsToSuppliersListView>();

                            var mainregion30 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion30.Add(mainview30);
                            if (mainregion30 != null)
                            {
                                mainregion30.Activate(mainview30);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Payments to Suppliers List");
                            break;
                        case "PaymentToSupplierView":
                            
                            SharedValues.getValue = "PaymentToSupplierTab";
                            var tabview31 = ServiceLocator.Current.GetInstance<PurchaseTabView>();

                            var tabregion31 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion31.Add(tabview31);
                            if (tabregion31 != null)
                            {
                                tabregion31.Activate(tabview31);
                            }
                            PurchaseTabEntity tabentity4 = new PurchaseTabEntity();
                            var tabentityValue4 = tabentity4 as PurchaseTabEntity;
                            tabentityValue4.OrderTabTrue = true;

                            var mainview31 = ServiceLocator.Current.GetInstance<PaymentToSupplierView>();

                            var mainregion31 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion31.Add(mainview31);
                            if (mainregion31 != null)
                            {
                                mainregion31.Activate(mainview31);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Payment to Supplier Form");
                            break;
                        case "PandSDetailsView":
                            SharedValues.getValue = "PSDetailsTab";
                            var tabview32 = ServiceLocator.Current.GetInstance<PandSDetailsView>();

                            var tabregion32 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion32.Add(tabview32);
                            if (tabregion32 != null)
                            {
                                tabregion32.Activate(tabview32);
                            }

                            var view32 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region32 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region32.Add(view32);
                            if (region32 != null)
                            {
                                region32.Activate(view32);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products & Services Details Form");
                            break;
                        case "PandSDescriptionListView":
                            SharedValues.getValue = "PSDescriptionTab";
                            var tabview33 = ServiceLocator.Current.GetInstance<PandSDescriptionListView>();

                            var tabregion33 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion33.Add(tabview33);
                            if (tabregion33 != null)
                            {
                                tabregion33.Activate(tabview33);
                            }

                            var view33 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region33 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region33.Add(view33);
                            if (region33 != null)
                            {
                                region33.Activate(view33);
                            }


                            var SubTabView = ServiceLocator.Current.GetInstance<PandSSubTabView>();
                            var subMenuRegion = regionManager.Regions[RegionNames.SubMenuBarRegion];

                            subMenuRegion.Add(SubTabView);

                            if (subMenuRegion != null)
                            {
                                subMenuRegion.Activate(SubTabView);
                            }

                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Prodcts and Services Details List - Description");
                            break;
                        case "PandSHistoryView":
                            SharedValues.getValue = "PSHistoryTab";
                            var tabview34 = ServiceLocator.Current.GetInstance<PandSHistoryView>();

                            var tabregion34 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion34.Add(tabview34);
                            if (tabregion34 != null)
                            {
                                tabregion34.Activate(tabview34);
                            }

                            var view34 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region34 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region34.Add(view34);
                            if (region34 != null)
                            {
                                region34.Activate(view34);
                            }


                            var SubTabView1 = ServiceLocator.Current.GetInstance<PandSSubTabView>();
                            var subMenuRegion1 = regionManager.Regions[RegionNames.SubMenuBarRegion];

                            subMenuRegion1.Add(SubTabView1);

                            if (subMenuRegion1 != null)
                            {
                                subMenuRegion1.Activate(SubTabView1);
                            }

                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            //eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products & Services History");
                            break;
                        case "PandSStockCardView":
                            SharedValues.getValue = "StockInOutCardTab";

                            var tabview35 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            var tabregion35 = this.regionManager.Regions[RegionNames.MenuBarRegion];
                            tabregion35.Add(tabview35);
                            if (tabregion35 != null)
                            {
                                tabregion35.Activate(tabview35);
                            }

                            var mainview35 = ServiceLocator.Current.GetInstance<PandSStockCardView>();

                            var mainregion35 = this.regionManager.Regions[RegionNames.MainRegion];
                            mainregion35.Add(mainview35);
                            if (mainregion35 != null)
                            {
                                mainregion35.Activate(mainview35);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            //eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Stock In/Out Card");
                            break;
                        case "CountAndAdjustStockView":
                            SharedValues.getValue = "CountandAdjustStockTab";
                            var tabview36 = ServiceLocator.Current.GetInstance<CountAndAdjustStockView>();

                            var tabregion36 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion36.Add(tabview36);
                            if (tabregion36 != null)
                            {
                                tabregion36.Activate(tabview36);
                            }

                            var view36 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region36 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region36.Add(view36);
                            if (region36 != null)
                            {
                                region36.Activate(view36);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            //  eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Count and Adjust Stock Form");
                            break;
                        case "CountAndAdjustStockListView":
                            SharedValues.getValue = "CountandAdjustStockTab";
                            var tabview37 = ServiceLocator.Current.GetInstance<CountAndAdjustStockListView>();

                            var tabregion37 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion37.Add(tabview37);
                            if (tabregion37 != null)
                            {
                                tabregion37.Activate(tabview37);
                            }

                            var view37 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region37 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region37.Add(view37);
                            if (region37 != null)
                            {
                                region37.Activate(view37);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            // eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Count and Adjust Stock List");
                            break;
                        case "PandSSoldView":
                            SharedValues.getValue = "PSSoldTab";
                            var tabview38 = ServiceLocator.Current.GetInstance<PandSSoldView>();

                            var tabregion38 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion38.Add(tabview38);
                            if (tabregion38 != null)
                            {
                                tabregion38.Activate(tabview38);
                            }

                            var view38 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region38 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region38.Add(view38);
                            if (region38 != null)
                            {
                                region38.Activate(view38);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Sold");
                            break;
                        case "PandSPurchaseView":
                            SharedValues.getValue = "PSPurchasedTab";
                            var tabview39 = ServiceLocator.Current.GetInstance<PandSPurchaseView>();

                            var tabregion39 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion39.Add(tabview39);
                            if (tabregion39 != null)
                            {
                                tabregion39.Activate(tabview39);
                            }

                            var view39 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region39 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region39.Add(view39);
                            if (region39 != null)
                            {
                                region39.Activate(view39);
                            }
                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Purchased");
                            break;
                        case "TopPandSView":
                            SharedValues.getValue = "TopPSTab";
                            var tabview40 = ServiceLocator.Current.GetInstance<TopPandSView>();

                            var tabregion40 = this.regionManager.Regions[RegionNames.MainRegion];
                            tabregion40.Add(tabview40);
                            if (tabregion40 != null)
                            {
                                tabregion40.Activate(tabview40);
                            }

                            var view40 = ServiceLocator.Current.GetInstance<ProductTabView>();

                            IRegion region40 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                            region40.Add(view40);
                            if (region40 != null)
                            {
                                region40.Activate(view40);
                            }


                            var SubTabView2 = ServiceLocator.Current.GetInstance<PandSSubTabView>();
                            var subMenuRegion2 = regionManager.Regions[RegionNames.SubMenuBarRegion];

                            subMenuRegion2.Add(SubTabView2);

                            if (subMenuRegion2 != null)
                            {
                                subMenuRegion2.Activate(SubTabView2);
                            }

                            eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            //eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Top Products & Services");
                            break;
                        case "PandSSellPriceListView":

                            SharedValues.getValue = "PandSSellPricesTabTrue";
                            var SubTabView41 = ServiceLocator.Current.GetInstance<PandSSubTabView>();
                            var subMenuRegion41 = regionManager.Regions[RegionNames.SubMenuBarRegion];

                            subMenuRegion41.Add(SubTabView41);

                            if (subMenuRegion41 != null)
                            {
                                subMenuRegion41.Activate(SubTabView41);
                            }
                            var view41 = ServiceLocator.Current.GetInstance<PandSSellPriceListView>();

                            //var region = this.regionManager.Regions[RegionNames.MainRegion];
                            //region.Add(view);
                            //if (region != null)
                            //{
                            //    region.Activate(view);
                            //}
                            var region41 = this.regionManager.Regions[RegionNames.MainRegion];
                            region41.Add(view41);
                            if (region41 != null)
                            {
                                region41.Activate(view41);
                            }
                         
//eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Details List - Sell Prices");
                           
                            break;
                        case "PandSCostPriceListView":
                            var view42 = ServiceLocator.Current.GetInstance<PandSCostPriceListView>();

                            //var region = this.regionManager.Regions[RegionNames.MainRegion];
                            //region.Add(view);
                            //if (region != null)
                            //{
                            //    region.Activate(view);
                            //}
                            var region42 = this.regionManager.Regions[RegionNames.MainRegion];
                            region42.Add(view42);
                            if (region42 != null)
                            {
                                region42.Activate(view42);
                            }
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Details List - Cost Prices");
                            break;
                        case "PandSStockQuantitiesListView":
                            var view43 = ServiceLocator.Current.GetInstance<PandSStockQuantitiesListView>();

                            //var region = this.regionManager.Regions[RegionNames.MainRegion];
                            //region.Add(view);
                            //if (region != null)
                            //{
                            //    region.Activate(view);
                            //}
                            var region43 = this.regionManager.Regions[RegionNames.MainRegion];
                            region43.Add(view43);
                            if (region43 != null)
                            {
                                region43.Activate(view43);
                            }
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Details List - Stock Quantities");
                            break;
                        case "PandSCodesAndRatesListView":
                            var view44 = ServiceLocator.Current.GetInstance<PandSCodesAndRatesListView>();

                            //var region = this.regionManager.Regions[RegionNames.MainRegion];
                            //region.Add(view);
                            //if (region != null)
                            //{
                            //    region.Activate(view);
                            //}
                            var region44 = this.regionManager.Regions[RegionNames.MainRegion];
                            region44.Add(view44);
                            if (region44 != null)
                            {
                                region44.Activate(view44);
                            }
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Details List - GST Codes and Rates");
                            break;
                        case "PandSStockValueListView":
                            var view45 = ServiceLocator.Current.GetInstance<PandSStockValueListView>();

                            //var region = this.regionManager.Regions[RegionNames.MainRegion];
                            //region.Add(view);
                            //if (region != null)
                            //{
                            //    region.Activate(view);
                            //}
                            var region45 = this.regionManager.Regions[RegionNames.MainRegion];
                            region45.Add(view45);
                            if (region45 != null)
                            {
                                region45.Activate(view45);
                            }
                            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Products and Services Details List - Stock Value");
                            break;
                        //case "SupplierDetailView":
                        //    SharedValues.getValue = "SupplierDetailTab";
                        //    var mainview = ServiceLocator.Current.GetInstance<SupplierDetailView>();
                        //    var mainregion = this.regionManager.Regions[RegionNames.MainRegion];
                        //    mainregion.Add(mainview);
                        //    if (mainregion != null)
                        //    {
                        //        mainregion.Activate(mainview);
                        //    }


                        //    var tabview = ServiceLocator.Current.GetInstance<SupplierTabView>();
                        //    var tabregion = this.regionManager.Regions[RegionNames.MenuBarRegion];
                        //    tabregion.Add(tabview);
                        //    if (tabregion != null)
                        //    {
                        //        tabregion.Activate(tabview);
                        //    }

                        //    eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                        //    eventAggregator.GetEvent<TitleChangedEvent>().Publish("Suppliers Details Form");
                        //    break;
                        //case "SuppliersDetailsList1View":

                        //        SharedValues.getValue = "SuppliersDetailsListTab";
                        //        var view = ServiceLocator.Current.GetInstance<SuppliersDetailsList1View>();
                        //        var region = this.regionManager.Regions[RegionNames.MainRegion];
                        //        region.Add(view);
                        //        if (region != null)
                        //        {
                        //            region.Activate(view);
                        //        }

                        //        var view2 = ServiceLocator.Current.GetInstance<SupplierTabView>();

                        //        IRegion region2 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                        //        region2.Add(view2);
                        //        if (region2 != null)
                        //        {
                        //            region2.Activate(view2);
                        //        }

                        //        var SubTabView = ServiceLocator.Current.GetInstance<SuppliersDetailsSubTabView>();
                        //        var subMenuRegion = regionManager.Regions[RegionNames.SubMenuBarRegion];

                        //        subMenuRegion.Add(SubTabView);

                        //        if (subMenuRegion != null)
                        //        {
                        //            subMenuRegion.Activate(SubTabView);
                        //        }

                           
                        //    eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<TitleChangedEvent>().Publish("Suppliers Details List");
                        //    break;
                        //case "SupplierHistoryView":
                        //    SharedValues.getValue = "SupplierHistoryTab";
                        //    var mainview = ServiceLocator.Current.GetInstance<SupplierHistoryView>();
                        //    var mainregion = this.regionManager.Regions[RegionNames.MainRegion];
                        //    mainregion.Add(mainview);
                        //    if (mainregion != null)
                        //    {
                        //        mainregion.Activate(mainview);
                        //    }


                        //    var tabview = ServiceLocator.Current.GetInstance<SupplierTabView>();
                        //    var tabregion = this.regionManager.Regions[RegionNames.MenuBarRegion];
                        //    tabregion.Add(tabview);
                        //    if (tabregion != null)
                        //    {
                        //        tabregion.Activate(tabview);
                        //    }

                        //    eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                        //    eventAggregator.GetEvent<TitleChangedEvent>().Publish("Suppliers History");
                        //    break;
                        //case "TopSuppliersView":
                        //    SharedValues.getValue = "TopSuppliersTab";
                        //    var mainview = ServiceLocator.Current.GetInstance<TopSuppliersView>();
                        //    var mainregion = this.regionManager.Regions[RegionNames.MainRegion];
                        //    mainregion.Add(mainview);
                        //    if (mainregion != null)
                        //    {
                        //        mainregion.Activate(mainview);
                        //    }


                        //    var tabview = ServiceLocator.Current.GetInstance<SupplierTabView>();
                        //    var tabregion = this.regionManager.Regions[RegionNames.MenuBarRegion];
                        //    tabregion.Add(tabview);
                        //    if (tabregion != null)
                        //    {
                        //        tabregion.Activate(tabview);
                        //    }

                        //    eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(false);
                        //    eventAggregator.GetEvent<TitleChangedEvent>().Publish("Top Suppliers");
                        //    break;
                        //case "SuppliersUnPaidInvoicesView":
                        //    SharedValues.getValue = "SupplierStatementTab";

                        //    var view = ServiceLocator.Current.GetInstance<SuppliersUnPaidInvoicesView>();
                        //    var region = this.regionManager.Regions[RegionNames.MainRegion];
                        //    region.Add(view);
                        //    if (region != null)
                        //    {
                        //        region.Activate(view);
                        //    }

                        //    var view2 = ServiceLocator.Current.GetInstance<SupplierTabView>();

                        //    IRegion region2 = this.regionManager.Regions[RegionNames.MenuBarRegion];

                        //    region2.Add(view2);
                        //    if (region2 != null)
                        //    {
                        //        region2.Activate(view2);
                        //    }

                        //    var SubTabView = ServiceLocator.Current.GetInstance<SASClient.Purchasing.View.StatementSubTabView>();
                        //    var subMenuRegion = regionManager.Regions[RegionNames.SubMenuBarRegion];

                        //    subMenuRegion.Add(SubTabView);

                        //    if (subMenuRegion != null)
                        //    {
                        //        subMenuRegion.Activate(SubTabView);
                        //    }

                        //    eventAggregator.GetEvent<TabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
                        //    eventAggregator.GetEvent<TitleChangedEvent>().Publish("Suppliers Statement - Unpaid Invoices");
                        //    break;
                        //case "":
                        //    break;
                        //case "":
                        //    break;
                        //case "":
                        //    break;
                        //case "":
                        //    break;
                        //case "":
                        //    break;
                        //case "":
                        //    break;

                    }
                }
                else
                {

                }

            }
            catch (Exception)
            {

                throw;
            }

        }

        private void setdefaultTab()
        {
            //if (SharedValues.getValue == "CashBankStatementTab")
            //{
            //    this.CashBankStatementTabTrue = true;
            //}
            //if (SharedValues.getValue == "RefundFromSupplierTab")
            //{
            //    this.RefundFromSupplierTabTrue = true;
            //}
            //if (SharedValues.getValue == "RefundToCustomerTab")
            //{
            //    this.RefundToCustomerTabTrue = true;
            //}
            //if (SharedValues.getValue == "ReceiveMoneyTab")
            //{
            //    this.ReceiveMoneyTabTrue = true;
            //}
            //if (SharedValues.getValue == "PayMoneyTab")
            //{
            //    this.PayMoneyTabTrue = true;
            //}
            //if (SharedValues.getValue == "TransferMoneyTab")
            //{
            //    this.TransferMoneyTabTrue = true;
            //}

        }
    }
}
