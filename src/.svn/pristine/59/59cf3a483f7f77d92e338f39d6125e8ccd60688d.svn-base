using Microsoft.Practices.Prism.Commands;
using Microsoft.Practices.Prism.Events;
using Microsoft.Practices.Prism.Regions;
using Microsoft.Practices.ServiceLocation;
using SASClient.File.Views;
using SDN.Common;
using SDN.UI.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SASClient.File.ViewModel
{
    public class FileTabViewModel : FileTabEntity
    {
        #region Private Properties
        /// <summary>
        /// The region manager
        /// </summary>
        private readonly IRegionManager regionManager;
        /// <summary>
        /// The event aggregator
        /// </summary>
        private readonly IEventAggregator eventAggregator;

        /// <summary>
        /// The File details click command
        /// </summary>
        private readonly DelegateCommand FileDetailsClickCommand = null;

        /// <summary>
        /// The File history click command
        /// </summary>
        private readonly DelegateCommand FileHistoryClickCommand = null;

        /// <summary>
        /// The File statement click command
        /// </summary>
        private readonly DelegateCommand FileStatementClickCommand = null;

        /// <summary>
        /// The P & S Sold to File click command
        /// </summary>
        private readonly DelegateCommand pandsSoldtoFileClickCommand = null;

        /// <summary>
        /// The P & S Sold to File click command
        /// </summary>
        private readonly DelegateCommand exportDataClickCommand = null;

        #endregion


        #region Public Properties

        /// <summary>
        /// Gets the File click command.
        /// </summary>
        /// <value>
        /// The File click command.
        /// </value>
        public DelegateCommand ExportDataClickCommand
        {
            get
            {
                return (this.exportDataClickCommand ?? new DelegateCommand(this.ExportDataView));

            }
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="FileTabViewModel"/> class.
        /// </summary>
        /// <param name="regionManager">The region manager.</param>
        public FileTabViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)
        {
            this.regionManager = regionManager;
            this.eventAggregator = eventAggregator;
            this.setdefaultTab();
        }
        #endregion

        #region Private Methods

        /// <summary>
        /// Shows the File view.
        /// </summary>
        private void ExportDataView()
        {
            var view = ServiceLocator.Current.GetInstance<ExportDataView>();

            var region = this.regionManager.Regions[RegionNames.MainRegion];
            region.Add(view);
            if (region != null)
            {
                region.Activate(view);
            }
            eventAggregator.GetEvent<SubTabVisibilityEvent>().Publish(true);
            eventAggregator.GetEvent<TitleChangedEvent>().Publish("Exprot Data");
        }

        #endregion

        private void setdefaultTab()
        {
            if (SharedValues.getValue == "CompanyFileTab")
            {
                this.CompanyFileTabTrue = true;
            }
            else if (SharedValues.getValue == "ImportDataTab")
            {
                this.ImportDataTabTrue = true;
            }
            else if (SharedValues.getValue == "ExportDataTab")
            {
                this.ExportDataTabTrue = true;
            }
            else if (SharedValues.getValue == "BackupDataTab")
            {
                this.BackupDataTabTrue = true;
            }
            else if (SharedValues.getValue == "RestoreDataTab")
            {
                this.RestoreDataTabTrue = true;
            }
            else
            {
                this.CompanyFileTabTrue = true;
            }
        }
    }
}
