<UserControl x:Class="SASClient.CashBank.Views.TransferMoneyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:helpers="clr-namespace:SDN.Common.Converter;assembly=SDN.Common"
             xmlns:local="clr-namespace:SASClient.CashBank.Views"
             mc:Ignorable="d" Width="1024"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <helpers:DateTimeConverter x:Key="DateTimeFormatter"></helpers:DateTimeConverter>
        <helpers:RowToIndexConverter x:Key="RowToIndexConverter"/>
        <helpers:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter"/>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <!--Watermark style start here-->
        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="Gray" />
        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Black" />
        <!--Watermark style End here-->
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
        <Grid Margin="10,10,0,10" Width="auto" Height="auto">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
                <Style x:Key="ComboStyle" TargetType="{x:Type ComboBox}">
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="10*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"></ColumnDefinition>
                <ColumnDefinition Width="213"></ColumnDefinition>
                <ColumnDefinition Width="93"></ColumnDefinition>
                <ColumnDefinition Width="150"></ColumnDefinition>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition Width="150"></ColumnDefinition>

            </Grid.ColumnDefinitions>

            <DockPanel Grid.Row="0" Grid.Column="0">
                <TextBlock Text="Cash/Cheque No." Width="140"></TextBlock>
                <!--<RadioButton KeyboardNavigation.AcceptsReturn="True" Command="{Binding CashCheckedCommand}" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  Width="50" IsChecked="{Binding IsChequeFalse,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GroupName="AccntType" >Cash
                </RadioButton>
                <RadioButton Width="85" KeyboardNavigation.AcceptsReturn="True"  Command="{Binding ChequeCheckedCommand}" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding IsChequeTrue,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GroupName="AccntType">Cheque No
                </RadioButton>-->

            </DockPanel>
            <DockPanel Grid.Row="0" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,1,0" />
                <TextBox Width="200" Margin="0,0,0,5" HorizontalAlignment="Left" IsReadOnly="{Binding IsTextBoxReadOnly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                         Text="{Binding CashChequeNo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </DockPanel>
            <DockPanel Grid.Row="1" Grid.Column="0">
                <TextBlock  Name="lblDate" Text="Date" MaxWidth="140" MinWidth="140" Width="140" ></TextBlock>

            </DockPanel>
            <DockPanel Grid.Row="1" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="0,0,1,0" />
                <DatePicker MaxWidth="200" MinWidth="200" HorizontalAlignment="Left"  Margin="1,2,0,3" PreviewKeyUp="OpenDatePicker_KeyDown"  PreviewKeyDown="OpenDatePicker_KeyUp" 
                  IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   SelectedDate="{Binding TransferDateCalender, BindingGroupName=Group1, UpdateSourceTrigger=PropertyChanged}" Width="200"   >
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBox x:Name="Delivery_TextBox" IsReadOnly="True"  BorderThickness="0" HorizontalContentAlignment="Stretch" 
                                             VerticalContentAlignment="Stretch"  BorderBrush="{DynamicResource BaseBorderBrush}" >
                                            <TextBox.Text >
                                                <MultiBinding Converter="{StaticResource DateTimeFormatter}">
                                                    <Binding Path="SelectedDate"/>
                                                    <Binding Path="DateFormat"></Binding>
                                                    <Binding Path="DataContext.TransferDateCalender"
                                                                RelativeSource="{RelativeSource AncestorType={x:Type DatePicker}}"  />
                                                </MultiBinding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <TextBox Margin="-243 -2 0 0" Height="21" BorderBrush="{StaticResource brushWatermarkBorder}" x:Name="PART_TextBox" IsReadOnly="false"  BorderThickness="0 0 0 0" HorizontalContentAlignment="Stretch" TextChanged="OnTextChanged"
                 VerticalContentAlignment="Stretch" Text="{Binding Path=CashChequeDateStr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }"  Width="160">

                </TextBox>
            </DockPanel>
            <DockPanel Grid.Row="4" Grid.Column="0">
                <TextBlock Width="auto">
                    Transfered from Cash/Bank/Credit Card Account
                </TextBlock>
            </DockPanel>

            <DockPanel Grid.Row="5" Grid.Column="0">
                <TextBlock Width="auto">
                    Transfered to Cash/Bank/Credit Card Account
                </TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="4" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,2,0" />
                <ComboBox  Name="cmbTransferFromAcName" Margin="0,2,0,5"   ItemsSource="{Binding TransferFromCashAndBankAccountsLst}"  
                           Width="200" Height="25"  HorizontalAlignment="Left" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
             BorderBrush="Black"  SelectedValue="{Binding SelectedtransferFromCashAndBankAcntID}"  DisplayMemberPath="AccountName" SelectedValuePath="AccountID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AccountSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </DockPanel>
            <DockPanel Grid.Row="5" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,2,0" />
                <ComboBox  Name="cmbTransferToAcName" Margin="0,2,0,5"   ItemsSource="{Binding TransferFromCashAndBankAccountsLst}"  
                           Width="200" Height="25"  HorizontalAlignment="Left" IsEnabled="{Binding IsCashChequeEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
             BorderBrush="Black"  SelectedValue="{Binding SelectedtransferToCashBankAcntID}"  DisplayMemberPath="AccountName" SelectedValuePath="AccountID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding TransferToAccountSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="0">
                <TextBlock  Text="Amount"/>
                <TextBlock Text="{Binding CurrencyName}" Margin="5,0,0,0"></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="1">
                <TextBlock Text="*" Foreground="Red" Margin="1,0,2,0" />
                <TextBox Margin="0,0,0,5" MaxLength="18" Width="200"  Text="{Binding AmountStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </DockPanel>
            <DockPanel Grid.Row="3" Grid.Column="0">
                <TextBlock Width="140">
                    Remarks
                </TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="3" Grid.Column="1">
                <TextBox MaxLength="200" Margin="8,0,0,5" Width="200" Text="{Binding Remarks,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"></TextBox>
            </DockPanel>

            <TextBlock Name="lblTransferFromBeforeBalance" Grid.Row="4" Grid.Column="2" Text="Before Balance" HorizontalAlignment="Center" Margin="5,0,3,0" Width="86"></TextBlock>
            <TextBlock Name="lblTransferToBeforeBalance" Grid.Row="5" Grid.Column="2" Text="Before Balance" HorizontalAlignment="Center" Margin="5,0,3,0" Width="86"></TextBlock>
            <TextBlock Name="lblTransferFromAfterBalance" Grid.Row="4" Grid.Column="4" Text="After Balance" HorizontalAlignment="Center" Margin="12,0,13,0" Width="76"></TextBlock>
            <TextBlock Name="lblTransferToAfterBalance" Grid.Row="5" Grid.Column="4" Text="After Balance" HorizontalAlignment="Center" Margin="12,0,13,0" Width="76"></TextBlock>

            <TextBox Name="txtTransferFromBeforeBalance" Grid.Row="4" Grid.Column="3" 
                  Margin="1,2,0,7"  Text="{Binding TransferFromBeforeBalanceStr}" IsReadOnly="True" Height="Auto"/>
            <TextBox Name="txtTransferToBeforeBalance" Grid.Row="5" Grid.Column="3" 
                    Margin="1,1,0,6"  Text="{Binding TransferToBeforeBalanceStr}" IsReadOnly="True" Height="Auto"/>
            <TextBox Name="txtTransferFromAfterBalance" Grid.Row="4" Grid.Column="5" 
                   Margin="1,2,0,7"   Text="{Binding TransferFromAfterBalanceStr}" IsReadOnly="True" Height="Auto"/>
            <TextBox Name="txtTransferToAfterBalance" Grid.Row="5" Grid.Column="5" 
                  Margin="1,1,0,6"    Text="{Binding TransferToAfterBalanceStr}" IsReadOnly="True" Height="Auto"/>
            <TextBlock Grid.Row="12" Grid.Column="4" VerticalAlignment="Bottom" Grid.ColumnSpan="4" Margin="-200,0,0,0" Foreground="Red" Text="{Binding Path=PSErrors}"></TextBlock>

            <TextBlock Grid.Row="12" Grid.Column="4" VerticalAlignment="Bottom" Grid.ColumnSpan="4" Margin="-200,0,0,0" Foreground="Red" Text="{Binding Path=DateErrors}"></TextBlock>
            <DockPanel Grid.Row="6" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Margin="0 0 0 0" Height="35" Width="210">
                <Button x:Name="btnNew" Content="New" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding NewPSCommand}"></Button>
                <Button x:Name="btnSave" Content="Save" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding SaveCommand}"></Button>
                <Button x:Name="btnClose" Content="Close" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding Path=CloseCommand }"></Button>
            </DockPanel>

        </Grid>
    </ScrollViewer>
</UserControl>
