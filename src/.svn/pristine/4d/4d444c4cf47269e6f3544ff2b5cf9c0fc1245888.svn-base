<UserControl x:Class="SDN.Purchasing.View.PurchaseInvoiceBEView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SDN.Purchasing.View"
             mc:Ignorable="d"  Width="1024" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
              xmlns:helpers="clr-namespace:SDN.Common.Converter;assembly=SDN.Common"
             Height="auto" >
    <UserControl.Resources>
        <helpers:DateTimeConverter x:Key="DateTimeFormatter"></helpers:DateTimeConverter>
        <helpers:RowToIndexConverter x:Key="RowToIndexConverter"/>
        <helpers:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter"/>

        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
        <SolidColorBrush x:Key="brushWatermarkForeground" Color="Gray" />
        <SolidColorBrush x:Key="brushWatermarkBorder" Color="Black" />
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
        <Grid Margin="10,10,0,10" Width="auto" Height="auto">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Height" Value="25"></Setter>
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
                <Style x:Key="ComboStyle" TargetType="{x:Type ComboBox}">
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="25"></RowDefinition>

                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="39"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="33"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="35"></RowDefinition>
                <!--<RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"></ColumnDefinition>
                <ColumnDefinition Width="250"></ColumnDefinition>
                <ColumnDefinition Width="160"></ColumnDefinition>
                <ColumnDefinition Width="120"></ColumnDefinition>
                <ColumnDefinition Width="220"></ColumnDefinition>

            </Grid.ColumnDefinitions>
            <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >
                <TextBlock  Name="lblSupplierName" Text="Supplier Name"></TextBlock>
                <TextBlock Text="*" Foreground="Red" Margin="50,0,0,0" />
                <ComboBox  Name="cmbSupplierName" IsEditable="True" Margin="3,2,0,5" IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding LstSuppliers}"  
                           Width="230" Height="25"  HorizontalAlignment="Left"
             BorderBrush="{StaticResource brushWatermarkBorder}" SelectedValue="{Binding SelectedSupplierID}"  DisplayMemberPath="SupplierName" SelectedValuePath="ID" VerticalAlignment="Top"  >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SupplierSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock  Margin="10,0,0,0">
                  <Hyperlink  Command="{Binding DataContext.NavigateToClientCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                     CommandParameter="{Binding SelectedSupplierID}">
                      <TextBlock Text="Supplier Details" TextWrapping="Wrap" />
                        </Hyperlink>
                       </TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="130,0,0,0" >
                <TextBlock   Margin="17 5 0 0"   Style="{StaticResource WaterMarkStyle}" 
                    HorizontalAlignment="Left"   Text="Search" Foreground="{StaticResource brushWatermarkForeground}" >
                    <TextBlock.Visibility>
                        <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                            <Binding ElementName="cmbSupplierName" Path="Text.IsEmpty" />
                            <Binding ElementName="cmbSupplierName" Path="IsFocused" />
                        </MultiBinding>
                    </TextBlock.Visibility>
                </TextBlock>
            </DockPanel>
            <TextBlock Grid.Row="0" Grid.Column="2" Name="lblBlank"   Text="" Grid.RowSpan="3" ></TextBlock>


            <TextBlock Grid.Row="0" Grid.Column="3" Name="lblInvoiceNo" Text="Invoice No." ></TextBlock>
            <TextBox HorizontalAlignment="Left" Width="195" Grid.Row="0" Grid.Column="4" Name="txtInvoiceNo" MaxLength="50"
                 IsReadOnly="{Binding AllFieldsReadonly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"    Margin="9,0,0,5" Text="{Binding InvoiceNo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  ></TextBox>

            <TextBlock Grid.Row="1" Grid.Column="3" Name="lblInvoiceDate" Text="Invoice Date" ></TextBlock>
            <DockPanel Grid.Row="1"  Grid.Column="4" Width="203" HorizontalAlignment="Left" >
                <TextBlock Text="*" Foreground="Red" Margin="0,0,2,2"></TextBlock>
                <DatePicker   Margin="1,0,0,4" PreviewKeyUp="OpenDatePicker_KeyDown"  PreviewKeyDown="OpenDatePicker_KeyUp" 
                  IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   SelectedDate="{Binding InvoiceDate, BindingGroupName=Group1, UpdateSourceTrigger=PropertyChanged}"   >
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBox x:Name="PART_TextBox" IsReadOnly="True"  BorderThickness="0" HorizontalContentAlignment="Stretch" 
                                             VerticalContentAlignment="Stretch"  BorderBrush="{DynamicResource BaseBorderBrush}" >
                                            <TextBox.Text >
                                                <MultiBinding Converter="{StaticResource DateTimeFormatter}">
                                                    <Binding Path="SelectedDate"/>
                                                    <Binding Path="DateFormat"></Binding>
                                                    <Binding Path="DataContext.InvoiceDate"
                                                                RelativeSource="{RelativeSource AncestorType={x:Type DatePicker}}"  />
                                                </MultiBinding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
            </DockPanel>
            <!--<DockPanel Grid.Row="1"  Grid.Column="0"  HorizontalAlignment="Left" Margin="0,4,0,0" >
                <TextBlock  Name="lblBillToAddress"  Text="Bill to Address" ></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="1"  Grid.Column="1" Margin="5,4,0,0"  >
                <TextBlock  Name="lblShipToAddress"  Text="Ship to Address" ></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.RowSpan="2" Grid.Column="0">
                <TextBox HorizontalAlignment="Left"  Name="txtBillToAddress" Text="{Binding BillToAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                Height="30"  IsReadOnly="True" TextWrapping="Wrap" Width="250"  ></TextBox>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" >
                <TextBox HorizontalAlignment="Left"   Name="txtShipToAddress"  Width="250" Margin="5,0,0,0"
                     Height="30" Text="{Binding ShipToAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" TextWrapping="Wrap" ></TextBox>
            </DockPanel>-->
            <!--<DockPanel Grid.Row="2" Grid.Column="0">
                <TextBlock  Name="lblBillToAddress"  Text="Bill to Address" ></TextBlock>
                <TextBlock  Name="lblShipToAddress" Text="Ship to Address" HorizontalAlignment="Right"></TextBlock>
            </DockPanel>
            <DockPanel  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBox HorizontalAlignment="Left"  Name="txtBillToAddress" Text="{Binding BillToAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                Height="40"  IsReadOnly="True" TextWrapping="Wrap" MaxWidth="300" Width="200"  ></TextBox>
                <TextBox HorizontalAlignment="Center"   Name="txtShipToAddress"  Width="200" Margin="0,0,6,5"
                     Height="40" Text="{Binding ShipToAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" TextWrapping="Wrap" ></TextBox>
            </DockPanel>-->
            <DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock  Name="lblOurPONo" Text="Our PO No." ></TextBlock>
                <TextBox Width="230" HorizontalAlignment="Left"   Name="txtOurPONo" Margin="76,0,0,5" IsReadOnly="True"
                   Text="{Binding OurPONo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                <TextBlock  Text="Balance" HorizontalAlignment="Left" Margin="11,0,0,0"></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" >
                <TextBlock  Text="Credit Limit Amount" HorizontalAlignment="Right" Margin="0,0,1,0"></TextBlock>
            </DockPanel>
            <TextBlock Grid.Row="1" Grid.Column="2" Margin="10,0,0,0" Text="{Binding Sup_Balance}" HorizontalAlignment="Left"></TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="2" Margin="10,0,0,0" Text="{Binding Sup_CreditLimitAmount}" HorizontalAlignment="Left"></TextBlock>
            <TextBlock Grid.Row="2" Grid.Column="3" Name="lblPaymentDueDate" Text="Payment Due Date" ></TextBlock>
            <DockPanel Grid.Row="2"  Grid.Column="4" Width="203" HorizontalAlignment="Left" >
                <TextBlock Text="*" Foreground="Red" Margin="0,0,2,2"></TextBlock>
                <DatePicker   Margin="1,0,0,4" PreviewKeyUp="OpenDatePicker_KeyDown"  PreviewKeyDown="OpenDatePicker_KeyUp" 
                  IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   SelectedDate="{Binding PaymentDueDate, BindingGroupName=Group1, UpdateSourceTrigger=PropertyChanged}"   >
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBox x:Name="PART_TextBox" IsReadOnly="True"  BorderThickness="0" HorizontalContentAlignment="Stretch" 
                                             VerticalContentAlignment="Stretch"  BorderBrush="{DynamicResource BaseBorderBrush}" >
                                            <TextBox.Text >
                                                <MultiBinding Converter="{StaticResource DateTimeFormatter}">
                                                    <Binding Path="SelectedDate"/>
                                                    <Binding Path="DateFormat"></Binding>
                                                    <Binding Path="DataContext.PaymentDueDate"
                                                                RelativeSource="{RelativeSource AncestorType={x:Type DatePicker}}"  />
                                                </MultiBinding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
            </DockPanel>

            <Button Grid.Row="2" HorizontalAlignment="Left" Grid.Column="0" Width="150" Content="Enter Purchases of P&amp;S" 
                 Command="{Binding NavigateToPICommand}"   Style="{StaticResource ButtonStyle}"></Button>

            <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6" Foreground="Gray" FontStyle="Italic">
                If you returned a Business Cost or Expense to Supplier, enter minus amount. If Total has minus value, Simple will automatically create a Debit Note.
            </TextBlock>

            <DockPanel Grid.Row="3" Grid.Column="4" Margin="8,3,5,5" HorizontalAlignment="Right">
                <RadioButton Name="rdnExcludeGST" IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  GroupName="grpTax" IsChecked="{Binding ExcludingTax,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding ExcludeTaxCheckedCommand}" CommandParameter="SSRT" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <TextBlock Name="lblExcludeGST"  Margin="8,0,10,0">
                    <Run Text="exc."/>
                    <Run Text="{Binding TaxName}"/>
                </TextBlock>
                <RadioButton Name="rdnIncludeGST"  IsEnabled="{Binding AllFieldsEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" GroupName="grpTax" IsChecked="{Binding IncludingTax,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                            >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding IncludeTaxCheckedCommand}" CommandParameter="SSRT" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </RadioButton>
                <TextBlock Name="lblIncludeGST"  Margin="10,0,0,0">
                    <Run Text="inc."/>
                    <Run Text="{Binding TaxName}"/>
                </TextBlock>
            </DockPanel>

            <Grid Width="995" HorizontalAlignment="Left"  Height="{Binding PIFormGridHeight}" Margin="0,0,0,0" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="6">
                <Grid>
                    <DataGrid x:Name="CustomGridLines" ItemsSource="{Binding BackGroundLines}" Grid.Column="0" 
                          Height="{Binding ElementName=grdPandS,Path=ActualHeight}" GridLinesVisibility="All"   Width="{Binding ElementName=grdPandS,Path=ActualWidth}"
                          HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" AutoGenerateColumns="False"  CanUserSortColumns="False"
                           HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"
                          ColumnHeaderStyle="{StaticResource BackHeaderStyle20}" HeadersVisibility="All"   >
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="" Binding="{Binding Col0}"  Width="20"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="" Binding="{Binding Col0}"  Width="400"></DataGridTextColumn>
                            <DataGridTextColumn Header="" Binding="{Binding Col1}"  Width="340"></DataGridTextColumn>
                            <DataGridTextColumn Header="" Binding="{Binding Col2}"  Width="145"></DataGridTextColumn>
                            <DataGridTextColumn Header="" Binding="{Binding Col3}"  Width="90"></DataGridTextColumn>
                            
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid HorizontalAlignment="Left" Grid.ColumnSpan="8" Width="995" Name="grdPandS" GridLinesVisibility="All" IsReadOnly="{Binding AllFieldsReadonly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                      BorderThickness="1" BorderBrush="Black"  Height="{Binding PIFormGridHeight}"  
                         AutoGenerateColumns="False" CanUserAddRows="True"    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      CanUserReorderColumns="False" GotFocus="grdPandS_GotFocus" 
                      CanUserSortColumns="True" CanUserDeleteRows="True" Background="Transparent" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"   IsTabStop="False"
                       LostKeyboardFocus="grdPandS_LostKeyboardFocus"  ColumnHeaderStyle="{StaticResource HeaderStyle20}"
                     KeyUp="grdPandS_KeyUp"  >

                        <DataGrid.Columns >
                            <DataGridTextColumn x:Name="description"  Binding = "{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Width="400" >
                   
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ElementName=description,Path=ActualWidth}"/>
                                            </Grid.ColumnDefinitions>
                                            <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
                                                <TextBlock >   
                                 <Run Text="Description" />
                               
                                                </TextBlock>
                                            </DockPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="50"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn  Width="340"  
                     DisplayMemberPath="AccountName" x:Name="actName"
                     SelectedValuePath="AccountID" 
                     SelectedValueBinding="{Binding SelectedAccountId,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }" >
                                <DataGridComboBoxColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ElementName=actName,Path=ActualWidth}"/>
                                            </Grid.ColumnDefinitions>
                                            <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
                                                <TextBlock >   
                                 <Run Text="Account Name" />

                                                </TextBlock>
                                            </DockPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridComboBoxColumn.HeaderTemplate>
                                <!--<DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Accounts, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Accounts, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="IsEditable" Value="True" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
                                        <EventSetter Event="UIElement.GotFocus" Handler="Item_GotFocus"></EventSetter>
                                        --><!--<EventSetter Event="SelectionChanged" Handler="PandSCodeSelectionChanged"  />-->
                                        <!--<EventSetter Event="UIElement.KeyUp" Handler="PandSCodeKeyUp" ></EventSetter>--><!--
                                    </Style>

                                </DataGridComboBoxColumn.EditingElementStyle>-->
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource"  Value="{Binding Path=DataContext.Accounts, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate>

                                                    <Grid x:Name="gd" TextElement.Foreground="Black" Width="350">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition Width="150"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Text="{Binding AccountName}"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding AccountTypeName}"/>
                                                    </Grid>
                                                    <DataTemplate.Triggers>
                                                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                                            <Setter TargetName="gd"  Property="Background" Value="Gray"></Setter>
                                                            <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                                        </Trigger>
                                                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                                            <Setter TargetName="gd"  Property="Background" Value="Gray"></Setter>
                                                            <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                                        </Trigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>

                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="IsEditable" Value="True"></Setter>
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                        <Setter Property="ItemsSource"  Value="{Binding Path=DataContext.Accounts, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate>

                                                    <Grid x:Name="gd" TextElement.Foreground="Black" Width="350">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="200" />
                                                            <ColumnDefinition Width="150"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Text="{Binding AccountName}"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding AccountTypeName}"/>
                                                    </Grid>
                                                    <DataTemplate.Triggers>
                                                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                                                            <Setter TargetName="gd"  Property="Background" Value="Gray"></Setter>
                                                            <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                                        </Trigger>
                                                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                                                            <Setter TargetName="gd"  Property="Background" Value="Gray"></Setter>
                                                            <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                                        </Trigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>

                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                </DataGridComboBoxColumn.EditingElementStyle>

                            </DataGridComboBoxColumn>
                            <DataGridTextColumn x:Name="Txtamount" Header = "Amount" Binding = "{Binding PQAmountStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="145" >
                                  <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ElementName=Txtamount,Path=ActualWidth}"/>
                                            </Grid.ColumnDefinitions>
                                            <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right">
                                                <TextBlock >   
                                 <Run Text="Amount" />
                               
                                                </TextBlock>
                                            </DockPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        
                                        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="MaxLength" Value="18"/>
                                        <!--<Setter Property="Width" Value="{Binding ElementName=Txtamount}"/>-->
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn x:Name="TxtTaxname" Width="90"  DisplayMemberPath="TaxRate" 
                     SelectedValuePath="TaxID"  SelectedValueBinding="{Binding SelectedTaxID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }" >
                                <DataGridComboBoxColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Grid.IsSharedSizeScope="True"   Width="{Binding ElementName=TxtTaxname,Path=ActualWidth}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition ></ColumnDefinition>

                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" HorizontalAlignment="Right"  >
                                                <Run Text="{Binding DataContext.TaxName,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"></Run>
                                                <Run  Text="Rate %"></Run>
                                            </TextBlock>
                                            <!--<TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="0 0 0 0"></TextBlock>-->
                                        </Grid>
                                    </DataTemplate>
                                </DataGridComboBoxColumn.HeaderTemplate>
                                <DataGridComboBoxColumn.ElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Taxes, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
                                    </Style>
                                </DataGridComboBoxColumn.ElementStyle>
                                <DataGridComboBoxColumn.EditingElementStyle>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="ItemsSource" Value="{Binding Path=DataContext.Taxes, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="IsEditable" Value="True" />
                                        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
                                        <EventSetter Event="UIElement.GotFocus" Handler="Item_GotFocus"></EventSetter>
                                        <!--<EventSetter Event="SelectionChanged" Handler="PandSCodeSelectionChanged"  />-->
                                        <!--<EventSetter Event="UIElement.KeyUp" Handler="PandSCodeKeyUp" ></EventSetter>-->
                                    </Style>

                                </DataGridComboBoxColumn.EditingElementStyle>

                            </DataGridComboBoxColumn>

                        </DataGrid.Columns>

                    </DataGrid>
                </Grid>
            </Grid>
            <!--<TextBlock Grid.Row="7" Grid.Column="0" Width="20"/>-->

            <TextBlock Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="2" Name="lblTotalBeforeTax" Text="Total before Tax"
                      Margin="80,10,0,0" VerticalAlignment="Center" ></TextBlock>
            <TextBox TabIndex="11" Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="2" Margin="79,10,0,4" Name="txtTotalBeforeTax" IsReadOnly="True" Width="{Binding ElementName=Txtamount,Path=ActualWidth}" HorizontalAlignment="Left"
                HorizontalContentAlignment="Right"   Foreground="Gray"  Text="{Binding TotalBeforeTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <TextBlock Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="3" Name="lblTax" Text="{Binding TaxName}" Margin="80,0,0,0" VerticalAlignment="Center"></TextBlock>
            <TextBox TabIndex="12" Grid.Row="6" Grid.Column="3" Grid.ColumnSpan="2" Margin="79,2,0,4" Name="txtTax" IsReadOnly="True" Foreground="Gray" Width="{Binding ElementName=Txtamount,Path=ActualWidth}" HorizontalAlignment="Left"
                HorizontalContentAlignment="Right"    Text="{Binding TotalTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <TextBlock Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="2" Name="lblTotalAfterTax" Margin="80,0,0,0" VerticalAlignment="Center">
                <Run Text="Total after Tax"/>
                <Run Text="{Binding CurrencyName}"/>
            </TextBlock>
            <TextBox TabIndex="13" Grid.Row="7" Grid.Column="3" Grid.ColumnSpan="2" Margin="79,2,0,2" Name="txtTotalAfterTax" IsReadOnly="True" Foreground="Gray" Width="{Binding ElementName=Txtamount,Path=ActualWidth}" HorizontalAlignment="Left" 
               HorizontalContentAlignment="Right" Text="{Binding TotalAfterTaxStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>

            <TextBlock Grid.Row="5"  Margin="0,5,0,0" Grid.ColumnSpan="2" Grid.Column="0"  Name="lblTermsandConditions" Text="Terms and Conditions"  ></TextBlock>
            <DockPanel Grid.Row="6" Grid.Column="0" Grid.RowSpan="4" Grid.ColumnSpan="2">
                <TextBox x:Name="txtTermsandConditions"   Width="370"  Margin="0,5,0,0"
                  IsReadOnly="{Binding AllFieldsReadonly,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  TextWrapping="Wrap" HorizontalAlignment="Left"  Height="80" VerticalAlignment="Top"
               Text="{Binding TermsAndConditions,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </DockPanel>

            <!--<Button  Margin="0,10,0,0" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right" Width="100" Style="{StaticResource ButtonStyle}"  Content="Pay Supplier" Command="{Binding PaymentToSupplierCommand}" ></Button>-->
            <Image Grid.Row="7" Source="{Binding ImgSource}" Grid.Column="1" HorizontalAlignment="Right" Width="100"></Image>
           
            <TextBlock Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="3" Grid.RowSpan="3"  Foreground="Red"   
                       TextWrapping="Wrap" Text="{Binding PQErrors,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></TextBlock>
            <DockPanel Grid.Row="11" Grid.Column="0">
                <Button TabIndex="14" HorizontalAlignment="Left" Grid.ColumnSpan="2"  Width="100" Style="{StaticResource ButtonStyle}"  Content="Pay Supplier" Command="{Binding PaymentToSupplierCommand}" ></Button>
            </DockPanel>
            <DockPanel Grid.Row="11" Grid.ColumnSpan="4" Margin="120 2 0 0">
                <TextBlock Foreground="Gray" FontStyle="Italic" Text="In Account Name drop-down list You can select user created Cost, user created Expenses, and user &#x0a;created Asset accounts only."></TextBlock>
            </DockPanel>
            <DockPanel Grid.Row="11" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="top" Grid.ColumnSpan="3" Margin="0 0 10 0">
                <!--<Button x:Name="btnPrint" Content="Print" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding AddNewRowCommand}"></Button>
                <Button x:Name="btnDuplicate" Content="Duplicate" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding DuplicateCommand}"></Button>-->
                <Button x:Name="btnDelete" Content="Delete" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding DeleteCommand}"></Button>
                <Button x:Name="btnNew" Content="New" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding NewPQCommand}"></Button>
                <Button x:Name="btnSave" Content="Save" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}" Command="{Binding SaveCommand}"></Button>
                <Button x:Name="btnCancel" Content="Close" Command="{Binding Path=CloseCommand }" Margin="10,10,0,0" Style="{DynamicResource ButtonStyle}"></Button>
            </DockPanel>

        </Grid>
    </ScrollViewer>
</UserControl>
